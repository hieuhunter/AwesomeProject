{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = HeaderBackButton;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _MaskedView = _interopRequireDefault(require(\"../MaskedView\"));\n\nvar _TouchableItem = _interopRequireDefault(require(\"../TouchableItem\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction HeaderBackButton(_ref) {\n  var disabled = _ref.disabled,\n      allowFontScaling = _ref.allowFontScaling,\n      backImage = _ref.backImage,\n      label = _ref.label,\n      labelStyle = _ref.labelStyle,\n      _ref$labelVisible = _ref.labelVisible,\n      labelVisible = _ref$labelVisible === void 0 ? _reactNative.Platform.OS === 'ios' : _ref$labelVisible,\n      onLabelLayout = _ref.onLabelLayout,\n      onPress = _ref.onPress,\n      customPressColorAndroid = _ref.pressColorAndroid,\n      screenLayout = _ref.screenLayout,\n      customTintColor = _ref.tintColor,\n      titleLayout = _ref.titleLayout,\n      _ref$truncatedLabel = _ref.truncatedLabel,\n      truncatedLabel = _ref$truncatedLabel === void 0 ? 'Back' : _ref$truncatedLabel,\n      _ref$accessibilityLab = _ref.accessibilityLabel,\n      accessibilityLabel = _ref$accessibilityLab === void 0 ? label && label !== 'Back' ? \"\".concat(label, \", back\") : 'Go back' : _ref$accessibilityLab,\n      style = _ref.style;\n\n  var _useTheme = (0, _native.useTheme)(),\n      dark = _useTheme.dark,\n      colors = _useTheme.colors;\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      initialLabelWidth = _React$useState2[0],\n      setInitialLabelWidth = _React$useState2[1];\n\n  var tintColor = customTintColor !== undefined ? customTintColor : _reactNative.Platform.select({\n    ios: colors.primary,\n    default: colors.text\n  });\n  var pressColorAndroid = customPressColorAndroid !== undefined ? customPressColorAndroid : dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)';\n\n  var handleLabelLayout = function handleLabelLayout(e) {\n    onLabelLayout === null || onLabelLayout === void 0 ? void 0 : onLabelLayout(e);\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  var shouldTruncateLabel = function shouldTruncateLabel() {\n    return !label || initialLabelWidth && titleLayout && screenLayout && (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26;\n  };\n\n  var renderBackImage = function renderBackImage() {\n    if (backImage) {\n      return backImage({\n        tintColor: tintColor\n      });\n    } else {\n      return React.createElement(_reactNative.Image, {\n        style: [styles.icon, Boolean(labelVisible) && styles.iconWithLabel, Boolean(tintColor) && {\n          tintColor: tintColor\n        }],\n        source: require('../assets/back-icon.png'),\n        fadeDuration: 0\n      });\n    }\n  };\n\n  var renderLabel = function renderLabel() {\n    var leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    var labelElement = React.createElement(_reactNative.View, {\n      style: screenLayout ? [styles.labelWrapper, {\n        minWidth: screenLayout.width / 2 - 27\n      }] : null\n    }, React.createElement(_reactNative.Animated.Text, {\n      accessible: false,\n      onLayout: leftLabelText === label ? handleLabelLayout : undefined,\n      style: [styles.label, tintColor ? {\n        color: tintColor\n      } : null, labelStyle],\n      numberOfLines: 1,\n      allowFontScaling: !!allowFontScaling\n    }, leftLabelText));\n\n    if (backImage || _reactNative.Platform.OS !== 'ios') {\n      return labelElement;\n    }\n\n    return React.createElement(_MaskedView.default, {\n      maskElement: React.createElement(_reactNative.View, {\n        style: styles.iconMaskContainer\n      }, React.createElement(_reactNative.Image, {\n        source: require('../assets/back-icon-mask.png'),\n        style: styles.iconMask\n      }), React.createElement(_reactNative.View, {\n        style: styles.iconMaskFillerRect\n      }))\n    }, labelElement);\n  };\n\n  var handlePress = function handlePress() {\n    return onPress && requestAnimationFrame(onPress);\n  };\n\n  return React.createElement(_TouchableItem.default, {\n    disabled: disabled,\n    accessible: true,\n    accessibilityRole: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityLabel: accessibilityLabel,\n    accessibilityTraits: \"button\",\n    testID: \"header-back\",\n    delayPressIn: 0,\n    onPress: disabled ? undefined : handlePress,\n    pressColor: pressColorAndroid,\n    style: [styles.container, disabled && styles.disabled, style],\n    hitSlop: _reactNative.Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    }),\n    borderless: true\n  }, React.createElement(React.Fragment, null, renderBackImage(), renderLabel()));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: _objectSpread({\n    alignItems: 'center',\n    flexDirection: 'row'\n  }, _reactNative.Platform.select({\n    ios: null,\n    default: {\n      marginVertical: 3,\n      marginHorizontal: 11\n    }\n  })),\n  disabled: {\n    opacity: 0.5\n  },\n  label: {\n    fontSize: 17,\n    letterSpacing: 0.35\n  },\n  labelWrapper: {\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  icon: _reactNative.Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: _reactNative.I18nManager.isRTL ? -1 : 1\n      }]\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: _reactNative.I18nManager.isRTL ? -1 : 1\n      }]\n    }\n  }),\n  iconWithLabel: _reactNative.Platform.OS === 'ios' ? {\n    marginRight: 6\n  } : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: _reactNative.I18nManager.isRTL ? -1 : 1\n    }]\n  }\n});","map":{"version":3,"mappings":"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","names":["HeaderBackButton","disabled","allowFontScaling","backImage","label","labelStyle","labelVisible","Platform","OS","onLabelLayout","onPress","customPressColorAndroid","pressColorAndroid","screenLayout","customTintColor","tintColor","titleLayout","truncatedLabel","accessibilityLabel","style","useTheme","dark","colors","React","useState","undefined","initialLabelWidth","setInitialLabelWidth","select","ios","primary","default","text","handleLabelLayout","e","nativeEvent","layout","x","width","shouldTruncateLabel","renderBackImage","Image","styles","icon","Boolean","iconWithLabel","source","require","fadeDuration","renderLabel","leftLabelText","labelElement","View","labelWrapper","minWidth","Animated","Text","accessible","onLayout","color","numberOfLines","MaskedView","maskElement","iconMaskContainer","iconMask","iconMaskFillerRect","handlePress","requestAnimationFrame","TouchableItem","accessibilityRole","accessibilityComponentType","accessibilityTraits","testID","delayPressIn","pressColor","container","hitSlop","top","right","bottom","left","borderless","Fragment","StyleSheet","create","alignItems","flexDirection","marginVertical","marginHorizontal","opacity","fontSize","letterSpacing","height","marginLeft","marginRight","resizeMode","transform","scaleX","I18nManager","isRTL","margin","flex","justifyContent","backgroundColor","alignSelf"],"sources":["HeaderBackButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  View,\n  Platform,\n  StyleSheet,\n  LayoutChangeEvent,\n} from 'react-native';\nimport { useTheme } from '@react-navigation/native';\nimport MaskedView from '../MaskedView';\nimport TouchableItem from '../TouchableItem';\nimport type { StackHeaderLeftButtonProps } from '../../types';\n\ntype Props = StackHeaderLeftButtonProps;\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible = Platform.OS === 'ios',\n  onLabelLayout,\n  onPress,\n  pressColorAndroid: customPressColorAndroid,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n  accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back',\n  style,\n}: Props) {\n  const { dark, colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\n    undefined | number\n  >(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const pressColorAndroid =\n    customPressColorAndroid !== undefined\n      ? customPressColorAndroid\n      : dark\n      ? 'rgba(255, 255, 255, .32)'\n      : 'rgba(0, 0, 0, .32)';\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <TouchableItem\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityComponentType=\"button\"\n      accessibilityLabel={accessibilityLabel}\n      accessibilityTraits=\"button\"\n      testID=\"header-back\"\n      delayPressIn={0}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColorAndroid}\n      style={[styles.container, disabled && styles.disabled, style]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n      borderless\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </TouchableItem>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n});\n"]},"metadata":{},"sourceType":"script"}