{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ViewIngredientsButton;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _jsxFileName = \"E:\\\\hieu\\\\CVIEC\\\\AwesomeProject\\\\src\\\\components\\\\ViewIngredientsButton\\\\ViewIngredientsButton.js\";\n\nfunction ViewIngredientsButton(props) {\n  return _react.default.createElement(_reactNative.TouchableHighlight, {\n    underlayColor: \"rgba(73,182,77,0.9)\",\n    onPress: props.onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: _styles.default.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: _styles.default.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, \"View Ingredients\")));\n}\n\nViewIngredientsButton.propTypes = {\n  onPress: _propTypes.default.func,\n  source: _propTypes.default.number,\n  title: _propTypes.default.string\n};","map":{"version":3,"names":["ViewIngredientsButton","props","onPress","styles","container","text","propTypes","PropTypes","func","source","number","title","string"],"sources":["E:/hieu/CVIEC/AwesomeProject/src/components/ViewIngredientsButton/ViewIngredientsButton.js"],"sourcesContent":["import React from 'react';\nimport { TouchableHighlight, Image, Text, View } from 'react-native';\nimport PropTypes from 'prop-types';\nimport styles from './styles';\n\nexport default function ViewIngredientsButton (props) {\n    return (\n      <TouchableHighlight underlayColor='rgba(73,182,77,0.9)' onPress={props.onPress}>\n        <View style={styles.container}>\n          <Text style={styles.text}>View Ingredients</Text>\n        </View>\n      </TouchableHighlight>\n    );\n}\n\nViewIngredientsButton.propTypes = {\n  onPress: PropTypes.func,\n  source: PropTypes.number,\n  title: PropTypes.string\n};\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEe,SAASA,qBAAT,CAAgCC,KAAhC,EAAuC;EAClD,OACE,6BAAC,+BAAD;IAAoB,aAAa,EAAC,qBAAlC;IAAwD,OAAO,EAAEA,KAAK,CAACC,OAAvE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,6BAAC,iBAAD;IAAM,KAAK,EAAEC,eAAA,CAAOC,SAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,6BAAC,iBAAD;IAAM,KAAK,EAAED,eAAA,CAAOE,IAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBADF,CADF,CADF;AAOH;;AAEDL,qBAAqB,CAACM,SAAtB,GAAkC;EAChCJ,OAAO,EAAEK,kBAAA,CAAUC,IADa;EAEhCC,MAAM,EAAEF,kBAAA,CAAUG,MAFc;EAGhCC,KAAK,EAAEJ,kBAAA,CAAUK;AAHe,CAAlC"},"metadata":{},"sourceType":"script"}