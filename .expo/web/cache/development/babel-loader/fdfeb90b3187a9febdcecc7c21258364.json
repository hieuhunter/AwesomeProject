{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"children\", \"index\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport shallowCompare from 'react-addons-shallow-compare';\nimport { defaultScrollInterpolator, stackScrollInterpolator, tinderScrollInterpolator, defaultAnimatedStyles, shiftAnimatedStyles, stackAnimatedStyles, tinderAnimatedStyles } from \"../utils/animations\";\nvar IS_ANDROID = Platform.OS === 'android';\nvar IS_RTL = I18nManager.isRTL;\nexport var Carousel = function (_React$Component) {\n  _inherits(Carousel, _React$Component);\n\n  var _super = _createSuper(Carousel);\n\n  function Carousel(props) {\n    var _this;\n\n    _classCallCheck(this, Carousel);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"_activeItem\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollActiveItem\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_previousFirstItem\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_previousItemsLength\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_mounted\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positions\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_currentScrollOffset\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollEnabled\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_apparitionTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_hackSlideAnimationTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_enableAutoplayTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoplayTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_snapNoMomentumTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_androidRepositioningTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoplayInterval\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollPos\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollHandler\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_carouselRef\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoplaying\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onLayoutInitDone\", void 0);\n\n    _this.state = {\n      hideCarousel: !!props.apparitionDelay,\n      interpolators: []\n    };\n\n    var initialActiveItem = _this._getFirstItem(props.firstItem);\n\n    _this._activeItem = initialActiveItem;\n    _this._onScrollActiveItem = initialActiveItem;\n    _this._previousFirstItem = initialActiveItem;\n    _this._previousItemsLength = initialActiveItem;\n    _this._mounted = false;\n    _this._positions = [];\n    _this._currentScrollOffset = 0;\n    _this._scrollEnabled = props.scrollEnabled !== false;\n    _this._getCellRendererComponent = _this._getCellRendererComponent.bind(_assertThisInitialized(_this));\n    _this._getItemLayout = _this._getItemLayout.bind(_assertThisInitialized(_this));\n    _this._getKeyExtractor = _this._getKeyExtractor.bind(_assertThisInitialized(_this));\n    _this._onLayout = _this._onLayout.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onMomentumScrollEnd = _this._onMomentumScrollEnd.bind(_assertThisInitialized(_this));\n    _this._onTouchStart = _this._onTouchStart.bind(_assertThisInitialized(_this));\n    _this._onTouchEnd = _this._onTouchEnd.bind(_assertThisInitialized(_this));\n    _this._renderItem = _this._renderItem.bind(_assertThisInitialized(_this));\n\n    _this._setScrollHandler(props);\n\n    _this._displayWarnings(props);\n\n    return _this;\n  }\n\n  _createClass(Carousel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          apparitionDelay = _this$props.apparitionDelay,\n          autoplay = _this$props.autoplay,\n          firstItem = _this$props.firstItem;\n      this._mounted = true;\n\n      this._initPositionsAndInterpolators();\n\n      this._initTimeout = setTimeout(function () {\n        if (!_this2._mounted) {\n          return;\n        }\n\n        var apparitionCallback = function apparitionCallback() {\n          if (apparitionDelay) {\n            _this2.setState({\n              hideCarousel: false\n            });\n          }\n\n          if (autoplay) {\n            _this2.startAutoplay();\n          }\n        };\n\n        if (_this2._needsScrollView()) {\n          var _firstItem = _this2._getFirstItem(firstItem);\n\n          _this2._snapToItem(_firstItem, false, false, true);\n        }\n\n        if (apparitionDelay) {\n          _this2._apparitionTimeout = setTimeout(function () {\n            apparitionCallback();\n          }, apparitionDelay);\n        } else {\n          apparitionCallback();\n        }\n      }, 1);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (this.props.shouldOptimizeUpdates === false) {\n        return true;\n      } else {\n        return shallowCompare(this, nextProps, nextState);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var interpolators = this.state.interpolators;\n      var _this$props2 = this.props,\n          firstItem = _this$props2.firstItem,\n          scrollEnabled = _this$props2.scrollEnabled;\n\n      var itemsLength = this._getCustomDataLength(this.props);\n\n      if (!itemsLength) {\n        return;\n      }\n\n      var nextFirstItem = this._getFirstItem(firstItem, this.props);\n\n      var nextActiveItem = typeof this._activeItem !== 'undefined' ? this._activeItem : nextFirstItem;\n      var hasNewSize = this.props.vertical !== prevProps.vertical || this.props.vertical && prevProps.vertical && (prevProps.itemHeight !== this.props.itemHeight || prevProps.sliderHeight !== this.props.sliderHeight) || !this.props.vertical && !prevProps.vertical && (prevProps.itemWidth !== this.props.itemWidth || prevProps.sliderWidth !== this.props.sliderWidth);\n\n      if (nextActiveItem > itemsLength - 1) {\n        nextActiveItem = itemsLength - 1;\n      }\n\n      if (scrollEnabled !== prevProps.scrollEnabled) {\n        this._setScrollEnabled(scrollEnabled);\n      }\n\n      if (interpolators.length !== itemsLength || hasNewSize) {\n        this._activeItem = nextActiveItem;\n        this._previousItemsLength = itemsLength;\n\n        this._initPositionsAndInterpolators(this.props);\n\n        if (this._previousItemsLength > itemsLength) {\n          this._hackActiveSlideAnimation(nextActiveItem);\n        }\n\n        if (hasNewSize) {\n          this._snapToItem(nextActiveItem, false, false, true);\n        }\n      } else if (nextFirstItem !== this._previousFirstItem && nextFirstItem !== this._activeItem) {\n        this._activeItem = nextFirstItem;\n        this._previousFirstItem = nextFirstItem;\n\n        this._snapToItem(nextFirstItem, false, true, true);\n      }\n\n      if (this.props.onScroll !== prevProps.onScroll) {\n        this._setScrollHandler(this.props);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._mounted = false;\n      this.stopAutoplay();\n      clearTimeout(this._initTimeout);\n      clearTimeout(this._apparitionTimeout);\n      clearTimeout(this._hackSlideAnimationTimeout);\n      clearTimeout(this._enableAutoplayTimeout);\n      clearTimeout(this._autoplayTimeout);\n      clearTimeout(this._snapNoMomentumTimeout);\n      clearTimeout(this._androidRepositioningTimeout);\n    }\n  }, {\n    key: \"realIndex\",\n    get: function get() {\n      return this._activeItem;\n    }\n  }, {\n    key: \"currentIndex\",\n    get: function get() {\n      return this._getDataIndex(this._activeItem);\n    }\n  }, {\n    key: \"currentScrollPosition\",\n    get: function get() {\n      return this._currentScrollOffset;\n    }\n  }, {\n    key: \"_setScrollHandler\",\n    value: function _setScrollHandler(props) {\n      var scrollEventConfig = {\n        listener: this._onScroll,\n        useNativeDriver: true\n      };\n      this._scrollPos = new Animated.Value(0);\n      var argMapping = props.vertical ? [{\n        nativeEvent: {\n          contentOffset: {\n            y: this._scrollPos\n          }\n        }\n      }] : [{\n        nativeEvent: {\n          contentOffset: {\n            x: this._scrollPos\n          }\n        }\n      }];\n\n      if (props.onScroll && Array.isArray(props.onScroll._argMapping)) {\n        argMapping.pop();\n\n        var _props$onScroll$_argM = _slicedToArray(props.onScroll._argMapping, 1),\n            argMap = _props$onScroll$_argM[0];\n\n        if (argMap && argMap.nativeEvent && argMap.nativeEvent.contentOffset) {\n          this._scrollPos = argMap.nativeEvent.contentOffset.x || argMap.nativeEvent.contentOffset.y || this._scrollPos;\n        }\n\n        argMapping.push.apply(argMapping, _toConsumableArray(props.onScroll._argMapping));\n      }\n\n      this._onScrollHandler = Animated.event(argMapping, scrollEventConfig);\n    }\n  }, {\n    key: \"_displayWarnings\",\n    value: function _displayWarnings() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var pluginName = 'react-native-snap-carousel';\n      var removedProps = ['activeAnimationType', 'activeAnimationOptions', 'enableMomentum', 'lockScrollTimeoutDuration', 'lockScrollWhileSnapping', 'onBeforeSnapToItem', 'swipeThreshold'];\n\n      if (!props.vertical && (!props.sliderWidth || !props.itemWidth)) {\n        console.error(\"\".concat(pluginName, \": You need to specify both 'sliderWidth' and 'itemWidth' for horizontal carousels\"));\n      }\n\n      if (props.vertical && (!props.sliderHeight || !props.itemHeight)) {\n        console.error(\"\".concat(pluginName, \": You need to specify both 'sliderHeight' and 'itemHeight' for vertical carousels\"));\n      }\n\n      removedProps.forEach(function (removedProp) {\n        if (removedProp in props) {\n          console.warn(\"\".concat(pluginName, \": Prop \").concat(removedProp, \" has been removed in version 4 of the plugin\"));\n        }\n      });\n    }\n  }, {\n    key: \"_needsScrollView\",\n    value: function _needsScrollView() {\n      var useScrollView = this.props.useScrollView;\n      return IS_ANDROID ? useScrollView || !Animated.FlatList || this._shouldUseStackLayout() || this._shouldUseTinderLayout() : useScrollView || !Animated.FlatList;\n    }\n  }, {\n    key: \"_needsRTLAdaptations\",\n    value: function _needsRTLAdaptations() {\n      var vertical = this.props.vertical;\n      return IS_RTL && IS_ANDROID && !vertical;\n    }\n  }, {\n    key: \"_enableLoop\",\n    value: function _enableLoop() {\n      var _this$props3 = this.props,\n          data = _this$props3.data,\n          enableSnap = _this$props3.enableSnap,\n          loop = _this$props3.loop;\n      return enableSnap && loop && data && data.length && data.length > 1;\n    }\n  }, {\n    key: \"_shouldAnimateSlides\",\n    value: function _shouldAnimateSlides() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var inactiveSlideOpacity = props.inactiveSlideOpacity,\n          inactiveSlideScale = props.inactiveSlideScale,\n          scrollInterpolator = props.scrollInterpolator,\n          slideInterpolatedStyle = props.slideInterpolatedStyle;\n      return inactiveSlideOpacity < 1 || inactiveSlideScale < 1 || !!scrollInterpolator || !!slideInterpolatedStyle || this._shouldUseShiftLayout() || this._shouldUseStackLayout() || this._shouldUseTinderLayout();\n    }\n  }, {\n    key: \"_shouldUseShiftLayout\",\n    value: function _shouldUseShiftLayout() {\n      var _this$props4 = this.props,\n          inactiveSlideShift = _this$props4.inactiveSlideShift,\n          layout = _this$props4.layout;\n      return layout === 'default' && inactiveSlideShift !== 0;\n    }\n  }, {\n    key: \"_shouldUseStackLayout\",\n    value: function _shouldUseStackLayout() {\n      return this.props.layout === 'stack';\n    }\n  }, {\n    key: \"_shouldUseTinderLayout\",\n    value: function _shouldUseTinderLayout() {\n      return this.props.layout === 'tinder';\n    }\n  }, {\n    key: \"_shouldRepositionScroll\",\n    value: function _shouldRepositionScroll(index) {\n      var _this$props5 = this.props,\n          data = _this$props5.data,\n          enableSnap = _this$props5.enableSnap,\n          loopClonesPerSide = _this$props5.loopClonesPerSide;\n      var dataLength = data && data.length;\n\n      if (!enableSnap || !dataLength || !this._enableLoop() || index >= loopClonesPerSide && index < dataLength + loopClonesPerSide) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_roundNumber\",\n    value: function _roundNumber(num) {\n      var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var rounder = Math.pow(10, decimals);\n      return Math.round((num + Number.EPSILON) * rounder) / rounder;\n    }\n  }, {\n    key: \"_isMultiple\",\n    value: function _isMultiple(x, y) {\n      return Math.round(Math.round(x / y) / (1 / y)) === Math.round(x);\n    }\n  }, {\n    key: \"_getCustomData\",\n    value: function _getCustomData() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var data = props.data,\n          loopClonesPerSide = props.loopClonesPerSide;\n      var dataLength = data && data.length;\n\n      if (!dataLength) {\n        return [];\n      }\n\n      if (!this._enableLoop()) {\n        return data;\n      }\n\n      var previousItems = [];\n      var nextItems = [];\n\n      if (loopClonesPerSide > dataLength) {\n        var _previousItems2, _nextItems2;\n\n        var dataMultiplier = Math.floor(loopClonesPerSide / dataLength);\n        var remainder = loopClonesPerSide % dataLength;\n\n        for (var i = 0; i < dataMultiplier; i++) {\n          var _previousItems, _nextItems;\n\n          (_previousItems = previousItems).push.apply(_previousItems, _toConsumableArray(data));\n\n          (_nextItems = nextItems).push.apply(_nextItems, _toConsumableArray(data));\n        }\n\n        (_previousItems2 = previousItems).unshift.apply(_previousItems2, _toConsumableArray(data.slice(-remainder)));\n\n        (_nextItems2 = nextItems).push.apply(_nextItems2, _toConsumableArray(data.slice(0, remainder)));\n      } else {\n        previousItems = data.slice(-loopClonesPerSide);\n        nextItems = data.slice(0, loopClonesPerSide);\n      }\n\n      return previousItems.concat(data, nextItems);\n    }\n  }, {\n    key: \"_getCustomDataLength\",\n    value: function _getCustomDataLength() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var data = props.data,\n          loopClonesPerSide = props.loopClonesPerSide;\n      var dataLength = data && data.length;\n\n      if (!dataLength) {\n        return 0;\n      }\n\n      return this._enableLoop() ? dataLength + 2 * loopClonesPerSide : dataLength;\n    }\n  }, {\n    key: \"_getCustomIndex\",\n    value: function _getCustomIndex(index) {\n      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props;\n\n      var itemsLength = this._getCustomDataLength(props);\n\n      if (!itemsLength || typeof index === 'undefined') {\n        return 0;\n      }\n\n      return this._needsRTLAdaptations() ? itemsLength - index - 1 : index;\n    }\n  }, {\n    key: \"_getDataIndex\",\n    value: function _getDataIndex(index) {\n      var _this$props6 = this.props,\n          data = _this$props6.data,\n          loopClonesPerSide = _this$props6.loopClonesPerSide;\n      var dataLength = data && data.length;\n\n      if (!this._enableLoop() || !dataLength) {\n        return index;\n      }\n\n      if (index >= dataLength + loopClonesPerSide) {\n        return loopClonesPerSide > dataLength ? (index - loopClonesPerSide) % dataLength : index - dataLength - loopClonesPerSide;\n      } else if (index < loopClonesPerSide) {\n        if (loopClonesPerSide > dataLength) {\n          var baseDataIndexes = [];\n          var dataIndexes = [];\n          var dataMultiplier = Math.floor(loopClonesPerSide / dataLength);\n          var remainder = loopClonesPerSide % dataLength;\n\n          for (var i = 0; i < dataLength; i++) {\n            baseDataIndexes.push(i);\n          }\n\n          for (var j = 0; j < dataMultiplier; j++) {\n            dataIndexes.push.apply(dataIndexes, baseDataIndexes);\n          }\n\n          dataIndexes.unshift.apply(dataIndexes, _toConsumableArray(baseDataIndexes.slice(-remainder)));\n          return dataIndexes[index];\n        } else {\n          return index + dataLength - loopClonesPerSide;\n        }\n      } else {\n        return index - loopClonesPerSide;\n      }\n    }\n  }, {\n    key: \"_getPositionIndex\",\n    value: function _getPositionIndex(index) {\n      var _this$props7 = this.props,\n          loop = _this$props7.loop,\n          loopClonesPerSide = _this$props7.loopClonesPerSide;\n      return loop ? index + loopClonesPerSide : index;\n    }\n  }, {\n    key: \"_getSnapOffsets\",\n    value: function _getSnapOffsets() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n\n      var offset = this._getItemMainDimension();\n\n      return _toConsumableArray(Array(this._getCustomDataLength(props))).map(function (_, i) {\n        return i * offset;\n      });\n    }\n  }, {\n    key: \"_getFirstItem\",\n    value: function _getFirstItem(index) {\n      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props;\n      var loopClonesPerSide = props.loopClonesPerSide;\n\n      var itemsLength = this._getCustomDataLength(props);\n\n      if (!itemsLength || index > itemsLength - 1 || index < 0) {\n        return 0;\n      }\n\n      return this._enableLoop() ? index + loopClonesPerSide : index;\n    }\n  }, {\n    key: \"_getWrappedRef\",\n    value: function _getWrappedRef() {\n      if (this._carouselRef && (this._needsScrollView() && this._carouselRef.scrollTo || !this._needsScrollView() && this._carouselRef.scrollToOffset)) {\n        return this._carouselRef;\n      }\n\n      return this._carouselRef && this._carouselRef.getNode && this._carouselRef.getNode();\n    }\n  }, {\n    key: \"_getScrollEnabled\",\n    value: function _getScrollEnabled() {\n      return this._scrollEnabled;\n    }\n  }, {\n    key: \"_setScrollEnabled\",\n    value: function _setScrollEnabled() {\n      var scrollEnabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      var wrappedRef = this._getWrappedRef();\n\n      if (!wrappedRef || !wrappedRef.setNativeProps) {\n        return;\n      }\n\n      wrappedRef.setNativeProps({\n        scrollEnabled: scrollEnabled\n      });\n      this._scrollEnabled = scrollEnabled;\n    }\n  }, {\n    key: \"_getItemMainDimension\",\n    value: function _getItemMainDimension() {\n      return this.props.vertical ? this.props.itemHeight : this.props.itemWidth;\n    }\n  }, {\n    key: \"_getItemScrollOffset\",\n    value: function _getItemScrollOffset(index) {\n      return this._positions && this._positions[index] && this._positions[index].start;\n    }\n  }, {\n    key: \"_getItemLayout\",\n    value: function _getItemLayout(_, index) {\n      var itemMainDimension = this._getItemMainDimension();\n\n      return {\n        index: index,\n        length: itemMainDimension,\n        offset: itemMainDimension * index\n      };\n    }\n  }, {\n    key: \"_getCellRendererComponent\",\n    value: function _getCellRendererComponent(_ref) {\n      var children = _ref.children,\n          index = _ref.index,\n          style = _ref.style,\n          props = _objectWithoutProperties(_ref, _excluded);\n\n      var cellStyle = [style, !IS_ANDROID ? {\n        zIndex: this._getCustomDataLength() - index\n      } : {}];\n      return React.createElement(View, _extends({\n        style: cellStyle,\n        key: index\n      }, props), children);\n    }\n  }, {\n    key: \"_getKeyExtractor\",\n    value: function _getKeyExtractor(_, index) {\n      return this._needsScrollView() ? \"scrollview-item-\".concat(index) : \"flatlist-item-\".concat(index);\n    }\n  }, {\n    key: \"_getScrollOffset\",\n    value: function _getScrollOffset(event) {\n      var vertical = this.props.vertical;\n      return event && event.nativeEvent && event.nativeEvent.contentOffset && event.nativeEvent.contentOffset[vertical ? 'y' : 'x'] || 0;\n    }\n  }, {\n    key: \"_getContainerInnerMargin\",\n    value: function _getContainerInnerMargin() {\n      var opposite = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var activeSlideAlignment = this.props.activeSlideAlignment;\n\n      if (activeSlideAlignment === 'start' && !opposite || activeSlideAlignment === 'end' && opposite) {\n        return 0;\n      } else if (activeSlideAlignment === 'end' && !opposite || activeSlideAlignment === 'start' && opposite) {\n        return this.props.vertical ? this.props.sliderHeight - this.props.itemHeight : this.props.sliderWidth - this.props.itemWidth;\n      } else {\n        return this.props.vertical ? (this.props.sliderHeight - this.props.itemHeight) / 2 : (this.props.sliderWidth - this.props.itemWidth) / 2;\n      }\n    }\n  }, {\n    key: \"_getActiveSlideOffset\",\n    value: function _getActiveSlideOffset() {\n      var activeSlideOffset = this.props.activeSlideOffset;\n\n      var itemMainDimension = this._getItemMainDimension();\n\n      var minOffset = 10;\n      return itemMainDimension / 2 - activeSlideOffset >= minOffset ? activeSlideOffset : minOffset;\n    }\n  }, {\n    key: \"_getActiveItem\",\n    value: function _getActiveItem(offset) {\n      var itemMainDimension = this._getItemMainDimension();\n\n      var center = offset + itemMainDimension / 2;\n\n      var activeSlideOffset = this._getActiveSlideOffset();\n\n      var lastIndex = this._positions.length - 1;\n      var itemIndex;\n\n      if (offset <= 0) {\n        return 0;\n      }\n\n      if (this._positions[lastIndex] && offset >= this._positions[lastIndex].start) {\n        return lastIndex;\n      }\n\n      for (var i = 0; i < this._positions.length; i++) {\n        var _this$_positions$i = this._positions[i],\n            start = _this$_positions$i.start,\n            end = _this$_positions$i.end;\n\n        if (center + activeSlideOffset >= start && center - activeSlideOffset <= end) {\n          itemIndex = i;\n          break;\n        }\n      }\n\n      return itemIndex || 0;\n    }\n  }, {\n    key: \"_getSlideInterpolatedStyle\",\n    value: function _getSlideInterpolatedStyle(index, animatedValue) {\n      var _this$props8 = this.props,\n          layoutCardOffset = _this$props8.layoutCardOffset,\n          slideInterpolatedStyle = _this$props8.slideInterpolatedStyle;\n\n      if (slideInterpolatedStyle) {\n        return slideInterpolatedStyle(index, animatedValue, this.props);\n      } else if (this._shouldUseTinderLayout()) {\n        return tinderAnimatedStyles(index, animatedValue, this.props, layoutCardOffset);\n      } else if (this._shouldUseStackLayout()) {\n        return stackAnimatedStyles(index, animatedValue, this.props, layoutCardOffset);\n      } else if (this._shouldUseShiftLayout()) {\n        return shiftAnimatedStyles(index, animatedValue, this.props);\n      } else {\n        return defaultAnimatedStyles(index, animatedValue, this.props);\n      }\n    }\n  }, {\n    key: \"_initPositionsAndInterpolators\",\n    value: function _initPositionsAndInterpolators() {\n      var _this3 = this;\n\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var data = props.data,\n          scrollInterpolator = props.scrollInterpolator;\n\n      var itemMainDimension = this._getItemMainDimension();\n\n      if (!data || !data.length) {\n        return;\n      }\n\n      var interpolators = [];\n      this._positions = [];\n\n      this._getCustomData(props).forEach(function (_itemData, index) {\n        var _index = _this3._getCustomIndex(index, props);\n\n        var animatedValue;\n        _this3._positions[index] = {\n          start: index * itemMainDimension,\n          end: index * itemMainDimension + itemMainDimension\n        };\n\n        if (!_this3._shouldAnimateSlides(props) || !_this3._scrollPos) {\n          animatedValue = new Animated.Value(1);\n        } else {\n          var interpolator;\n\n          if (scrollInterpolator) {\n            interpolator = scrollInterpolator(_index, props);\n          } else if (_this3._shouldUseStackLayout()) {\n            interpolator = stackScrollInterpolator(_index, props);\n          } else if (_this3._shouldUseTinderLayout()) {\n            interpolator = tinderScrollInterpolator(_index, props);\n          }\n\n          if (!interpolator || !interpolator.inputRange || !interpolator.outputRange) {\n            interpolator = defaultScrollInterpolator(_index, props);\n          }\n\n          animatedValue = _this3._scrollPos.interpolate(_objectSpread(_objectSpread({}, interpolator), {}, {\n            extrapolate: 'clamp'\n          }));\n        }\n\n        interpolators.push(animatedValue);\n      });\n\n      this.setState({\n        interpolators: interpolators\n      });\n    }\n  }, {\n    key: \"_hackActiveSlideAnimation\",\n    value: function _hackActiveSlideAnimation(index) {\n      var _this4 = this;\n\n      var scrollValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      var offset = this._getItemScrollOffset(index);\n\n      if (!this._mounted || !this._carouselRef || typeof offset === 'undefined') {\n        return;\n      }\n\n      var multiplier = this._currentScrollOffset === 0 ? 1 : -1;\n      var scrollDelta = scrollValue * multiplier;\n\n      this._scrollTo({\n        offset: offset + scrollDelta,\n        animated: false\n      });\n\n      clearTimeout(this._hackSlideAnimationTimeout);\n      this._hackSlideAnimationTimeout = setTimeout(function () {\n        _this4._scrollTo({\n          offset: offset,\n          animated: false\n        });\n      }, 1);\n    }\n  }, {\n    key: \"_repositionScroll\",\n    value: function _repositionScroll(index) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var _this$props9 = this.props,\n          data = _this$props9.data,\n          loopClonesPerSide = _this$props9.loopClonesPerSide;\n      var dataLength = data && data.length;\n\n      if (typeof index === 'undefined' || !this._shouldRepositionScroll(index)) {\n        return;\n      }\n\n      var repositionTo = index;\n\n      if (index >= dataLength + loopClonesPerSide) {\n        repositionTo = index - dataLength;\n      } else if (index < loopClonesPerSide) {\n        repositionTo = index + dataLength;\n      }\n\n      this._snapToItem(repositionTo, animated, false);\n    }\n  }, {\n    key: \"_scrollTo\",\n    value: function _scrollTo(_ref2) {\n      var offset = _ref2.offset,\n          index = _ref2.index,\n          _ref2$animated = _ref2.animated,\n          animated = _ref2$animated === void 0 ? true : _ref2$animated;\n      var vertical = this.props.vertical;\n\n      var wrappedRef = this._getWrappedRef();\n\n      if (!this._mounted || !wrappedRef || typeof offset === 'undefined' && typeof index === 'undefined') {\n        return;\n      }\n\n      var scrollToOffset;\n\n      if (typeof index !== 'undefined') {\n        scrollToOffset = this._getItemScrollOffset(index);\n      } else {\n        scrollToOffset = offset;\n      }\n\n      if (typeof scrollToOffset === 'undefined') {\n        return;\n      }\n\n      var options = this._needsScrollView() ? {\n        x: vertical ? 0 : offset,\n        y: vertical ? offset : 0,\n        animated: animated\n      } : {\n        offset: offset,\n        animated: animated\n      };\n\n      if (this._needsScrollView()) {\n        wrappedRef.scrollTo(options);\n      } else {\n        wrappedRef.scrollToOffset(options);\n      }\n    }\n  }, {\n    key: \"_onTouchStart\",\n    value: function _onTouchStart(event) {\n      var onTouchStart = this.props.onTouchStart;\n\n      if (this._getScrollEnabled() !== false && this._autoplaying) {\n        this.pauseAutoPlay();\n      }\n\n      onTouchStart && onTouchStart(event);\n    }\n  }, {\n    key: \"_onTouchEnd\",\n    value: function _onTouchEnd(event) {\n      var onTouchEnd = this.props.onTouchEnd;\n\n      if (this._getScrollEnabled() !== false && this._autoplay && !this._autoplaying) {\n        this.startAutoplay();\n      }\n\n      onTouchEnd && onTouchEnd(event);\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(event) {\n      var _this$props10 = this.props,\n          onScroll = _this$props10.onScroll,\n          onScrollIndexChanged = _this$props10.onScrollIndexChanged;\n      var scrollOffset = event ? this._getScrollOffset(event) : this._currentScrollOffset;\n\n      var nextActiveItem = this._getActiveItem(scrollOffset);\n\n      this._currentScrollOffset = scrollOffset;\n\n      if (nextActiveItem !== this._onScrollActiveItem) {\n        this._onScrollActiveItem = nextActiveItem;\n        onScrollIndexChanged && onScrollIndexChanged(this._getDataIndex(nextActiveItem));\n      }\n\n      if (typeof onScroll === 'function' && event) {\n        onScroll(event);\n      }\n    }\n  }, {\n    key: \"_onMomentumScrollEnd\",\n    value: function _onMomentumScrollEnd(event) {\n      var _this5 = this;\n\n      var _this$props11 = this.props,\n          autoplayDelay = _this$props11.autoplayDelay,\n          onMomentumScrollEnd = _this$props11.onMomentumScrollEnd,\n          onSnapToItem = _this$props11.onSnapToItem;\n      var scrollOffset = event ? this._getScrollOffset(event) : this._currentScrollOffset;\n\n      var nextActiveItem = this._getActiveItem(scrollOffset);\n\n      var hasSnapped = this._isMultiple(scrollOffset, this.props.vertical ? this.props.itemHeight : this.props.itemWidth);\n\n      if (nextActiveItem !== this._activeItem) {\n        this._activeItem = nextActiveItem;\n        onSnapToItem && onSnapToItem(this._getDataIndex(nextActiveItem));\n\n        if (hasSnapped) {\n          this._repositionScroll(nextActiveItem);\n        }\n      }\n\n      onMomentumScrollEnd && onMomentumScrollEnd(event);\n\n      if (IS_ANDROID && this._autoplay && !this._autoplaying) {\n        clearTimeout(this._enableAutoplayTimeout);\n        this._enableAutoplayTimeout = setTimeout(function () {\n          _this5.startAutoplay();\n        }, autoplayDelay);\n      }\n    }\n  }, {\n    key: \"_onLayout\",\n    value: function _onLayout(event) {\n      var onLayout = this.props.onLayout;\n\n      if (this._onLayoutInitDone) {\n        this._initPositionsAndInterpolators();\n\n        this._snapToItem(this._activeItem, false, false, true);\n      } else {\n        this._onLayoutInitDone = true;\n      }\n\n      onLayout && onLayout(event);\n    }\n  }, {\n    key: \"_snapToItem\",\n    value: function _snapToItem(index) {\n      var _this6 = this;\n\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var fireCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var forceScrollTo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var onSnapToItem = this.props.onSnapToItem;\n\n      var itemsLength = this._getCustomDataLength();\n\n      var wrappedRef = this._getWrappedRef();\n\n      if (!itemsLength || !wrappedRef) {\n        return;\n      }\n\n      if (!index || index < 0) {\n        index = 0;\n      } else if (itemsLength > 0 && index >= itemsLength) {\n        index = itemsLength - 1;\n      }\n\n      if (index === this._activeItem && !forceScrollTo) {\n        return;\n      }\n\n      var offset = this._getItemScrollOffset(index);\n\n      if (offset === undefined) {\n        return;\n      }\n\n      this._scrollTo({\n        offset: offset,\n        animated: animated\n      });\n\n      var requiresManualTrigger = !animated || IS_ANDROID;\n\n      if (requiresManualTrigger) {\n        this._activeItem = index;\n\n        if (fireCallback) {\n          onSnapToItem && onSnapToItem(this._getDataIndex(index));\n        }\n\n        if (IS_ANDROID && this._shouldRepositionScroll(index)) {\n          if (animated) {\n            this._androidRepositioningTimeout = setTimeout(function () {\n              _this6._repositionScroll(index, true);\n            }, 400);\n          } else {\n            this._repositionScroll(index);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"startAutoplay\",\n    value: function startAutoplay() {\n      var _this7 = this;\n\n      var _this$props12 = this.props,\n          autoplayInterval = _this$props12.autoplayInterval,\n          autoplayDelay = _this$props12.autoplayDelay;\n      this._autoplay = true;\n\n      if (this._autoplaying) {\n        return;\n      }\n\n      clearTimeout(this._autoplayTimeout);\n      this._autoplayTimeout = setTimeout(function () {\n        _this7._autoplaying = true;\n        _this7._autoplayInterval = setInterval(function () {\n          if (_this7._autoplaying) {\n            _this7.snapToNext();\n          }\n        }, autoplayInterval);\n      }, autoplayDelay);\n    }\n  }, {\n    key: \"pauseAutoPlay\",\n    value: function pauseAutoPlay() {\n      this._autoplaying = false;\n      clearTimeout(this._autoplayTimeout);\n      clearTimeout(this._enableAutoplayTimeout);\n      clearInterval(this._autoplayInterval);\n    }\n  }, {\n    key: \"stopAutoplay\",\n    value: function stopAutoplay() {\n      this._autoplay = false;\n      this.pauseAutoPlay();\n    }\n  }, {\n    key: \"snapToItem\",\n    value: function snapToItem(index) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var fireCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (!index || index < 0) {\n        index = 0;\n      }\n\n      var positionIndex = this._getPositionIndex(index);\n\n      if (positionIndex === this._activeItem) {\n        return;\n      }\n\n      this._snapToItem(positionIndex, animated, fireCallback);\n    }\n  }, {\n    key: \"snapToNext\",\n    value: function snapToNext() {\n      var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var fireCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      var itemsLength = this._getCustomDataLength();\n\n      var newIndex = this._activeItem + 1;\n\n      if (newIndex > itemsLength - 1) {\n        newIndex = 0;\n      }\n\n      this._snapToItem(newIndex, animated, fireCallback);\n    }\n  }, {\n    key: \"snapToPrev\",\n    value: function snapToPrev() {\n      var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var fireCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      var itemsLength = this._getCustomDataLength();\n\n      var newIndex = this._activeItem - 1;\n\n      if (newIndex < 0) {\n        newIndex = itemsLength - 1;\n      }\n\n      this._snapToItem(newIndex, animated, fireCallback);\n    }\n  }, {\n    key: \"triggerRenderingHack\",\n    value: function triggerRenderingHack() {\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n      this._hackActiveSlideAnimation(this._activeItem, offset);\n    }\n  }, {\n    key: \"_renderItem\",\n    value: function _renderItem(_ref3) {\n      var item = _ref3.item,\n          index = _ref3.index;\n      var interpolators = this.state.interpolators;\n      var _this$props13 = this.props,\n          keyExtractor = _this$props13.keyExtractor,\n          slideStyle = _this$props13.slideStyle;\n      var animatedValue = interpolators && interpolators[index];\n\n      if (typeof animatedValue === 'undefined') {\n        return null;\n      }\n\n      var animate = this._shouldAnimateSlides();\n\n      var Component = animate ? Animated.View : View;\n      var animatedStyle = animate ? this._getSlideInterpolatedStyle(index, animatedValue) : {};\n\n      var dataIndex = this._getDataIndex(index);\n\n      var mainDimension = this.props.vertical ? {\n        height: this.props.itemHeight\n      } : {\n        width: this.props.itemWidth\n      };\n      var specificProps = this._needsScrollView() ? {\n        key: keyExtractor ? keyExtractor(item, index) : this._getKeyExtractor(item, index)\n      } : {};\n      return React.createElement(Component, _extends({\n        style: [mainDimension, slideStyle, animatedStyle],\n        pointerEvents: \"box-none\"\n      }, specificProps), this.props.vertical ? this.props.renderItem({\n        item: item,\n        index: index,\n        dataIndex: dataIndex\n      }, {\n        scrollPosition: this._scrollPos,\n        carouselRef: this._carouselRef,\n        vertical: this.props.vertical,\n        sliderHeight: this.props.sliderHeight,\n        itemHeight: this.props.itemHeight\n      }) : this.props.renderItem({\n        item: item,\n        index: index,\n        dataIndex: dataIndex\n      }, {\n        scrollPosition: this._scrollPos,\n        carouselRef: this._carouselRef,\n        vertical: !!this.props.vertical,\n        sliderWidth: this.props.sliderWidth,\n        itemWidth: this.props.itemWidth\n      }));\n    }\n  }, {\n    key: \"_getComponentOverridableProps\",\n    value: function _getComponentOverridableProps() {\n      var hideCarousel = this.state.hideCarousel;\n      var loopClonesPerSide = this.props.loopClonesPerSide;\n      var visibleItems = Math.ceil(this.props.vertical ? this.props.sliderHeight / this.props.itemHeight : this.props.sliderWidth / this.props.itemWidth) + 1;\n      var initialNumPerSide = this._enableLoop() ? loopClonesPerSide : 2;\n      var initialNumToRender = visibleItems + initialNumPerSide * 2;\n      var maxToRenderPerBatch = initialNumToRender + initialNumPerSide * 2;\n      var windowSize = maxToRenderPerBatch;\n      var specificProps = !this._needsScrollView() ? {\n        initialNumToRender: initialNumToRender,\n        maxToRenderPerBatch: maxToRenderPerBatch,\n        windowSize: windowSize\n      } : {};\n      return _objectSpread(_objectSpread({}, specificProps), {}, {\n        automaticallyAdjustContentInsets: false,\n        decelerationRate: 'fast',\n        directionalLockEnabled: true,\n        disableScrollViewPanResponder: false,\n        inverted: this._needsRTLAdaptations(),\n        overScrollMode: 'never',\n        pinchGestureEnabled: false,\n        pointerEvents: hideCarousel ? 'none' : 'auto',\n        scrollsToTop: false,\n        showsHorizontalScrollIndicator: false,\n        showsVerticalScrollIndicator: false\n      });\n    }\n  }, {\n    key: \"_getComponentStaticProps\",\n    value: function _getComponentStaticProps() {\n      var _this8 = this;\n\n      var hideCarousel = this.state.hideCarousel;\n      var _this$props14 = this.props,\n          activeSlideAlignment = _this$props14.activeSlideAlignment,\n          CellRendererComponent = _this$props14.CellRendererComponent,\n          containerCustomStyle = _this$props14.containerCustomStyle,\n          contentContainerCustomStyle = _this$props14.contentContainerCustomStyle,\n          firstItem = _this$props14.firstItem,\n          getItemLayout = _this$props14.getItemLayout,\n          keyExtractor = _this$props14.keyExtractor,\n          style = _this$props14.style,\n          useExperimentalSnap = _this$props14.useExperimentalSnap;\n      var containerStyle = [containerCustomStyle || style || {}, hideCarousel ? {\n        opacity: 0\n      } : {}, this.props.vertical ? {\n        height: this.props.sliderHeight,\n        flexDirection: 'column'\n      } : {\n        width: this.props.sliderWidth,\n        flexDirection: this._needsRTLAdaptations() ? 'row-reverse' : 'row'\n      }];\n      var innerMarginStyle = this.props.vertical ? {\n        paddingTop: this._getContainerInnerMargin(),\n        paddingBottom: this._getContainerInnerMargin(true)\n      } : {\n        paddingLeft: this._getContainerInnerMargin(),\n        paddingRight: this._getContainerInnerMargin(true)\n      };\n      var contentContainerStyle = [!useExperimentalSnap ? innerMarginStyle : {}, contentContainerCustomStyle || {}];\n      var snapProps = useExperimentalSnap ? {\n        snapToAlignment: activeSlideAlignment,\n        snapToInterval: this._getItemMainDimension()\n      } : {\n        snapToOffsets: this._getSnapOffsets()\n      };\n      var specificProps = !this._needsScrollView() ? {\n        CellRendererComponent: CellRendererComponent || this._getCellRendererComponent,\n        getItemLayout: getItemLayout || this._getItemLayout,\n        initialScrollIndex: this._getFirstItem(firstItem),\n        keyExtractor: keyExtractor || this._getKeyExtractor,\n        numColumns: 1,\n        renderItem: this._renderItem\n      } : {};\n      return _objectSpread(_objectSpread(_objectSpread({}, specificProps), snapProps), {}, {\n        ref: function ref(c) {\n          _this8._carouselRef = c;\n        },\n        contentContainerStyle: contentContainerStyle,\n        data: this._getCustomData(),\n        horizontal: !this.props.vertical,\n        scrollEventThrottle: 1,\n        style: containerStyle,\n        onLayout: this._onLayout,\n        onMomentumScrollEnd: this._onMomentumScrollEnd,\n        onScroll: this._onScrollHandler,\n        onTouchStart: this._onTouchStart,\n        onTouchEnd: this._onTouchEnd\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n\n      var _this$props15 = this.props,\n          data = _this$props15.data,\n          renderItem = _this$props15.renderItem,\n          useScrollView = _this$props15.useScrollView;\n\n      if (!data || !renderItem) {\n        return null;\n      }\n\n      var props = _objectSpread(_objectSpread(_objectSpread({}, this._getComponentOverridableProps()), this.props), this._getComponentStaticProps());\n\n      var ScrollViewComponent = typeof useScrollView === 'function' ? useScrollView : Animated.ScrollView;\n      return this._needsScrollView() || !Animated.FlatList ? React.createElement(ScrollViewComponent, props, this._getCustomData().map(function (item, index) {\n        return _this9._renderItem({\n          item: item,\n          index: index\n        });\n      })) : React.createElement(Animated.FlatList, props);\n    }\n  }]);\n\n  return Carousel;\n}(React.Component);\n\n_defineProperty(Carousel, \"defaultProps\", {\n  activeSlideAlignment: 'center',\n  activeSlideOffset: 20,\n  apparitionDelay: 0,\n  autoplay: false,\n  autoplayDelay: 1000,\n  autoplayInterval: 3000,\n  callbackOffsetMargin: 5,\n  containerCustomStyle: {},\n  contentContainerCustomStyle: {},\n  enableSnap: true,\n  firstItem: 0,\n  hasParallaxImages: false,\n  inactiveSlideOpacity: 0.7,\n  inactiveSlideScale: 0.9,\n  inactiveSlideShift: 0,\n  layout: 'default',\n  loop: false,\n  loopClonesPerSide: 3,\n  scrollEnabled: true,\n  slideStyle: {},\n  shouldOptimizeUpdates: true,\n  useExperimentalSnap: false,\n  useScrollView: !Animated.FlatList\n});\n\nexport default Carousel;","map":{"version":3,"sources":["Carousel.tsx"],"names":["IS_ANDROID","Platform","IS_RTL","I18nManager","Carousel","React","activeSlideAlignment","activeSlideOffset","apparitionDelay","autoplay","autoplayDelay","autoplayInterval","callbackOffsetMargin","containerCustomStyle","contentContainerCustomStyle","enableSnap","firstItem","hasParallaxImages","inactiveSlideOpacity","inactiveSlideScale","inactiveSlideShift","layout","loop","loopClonesPerSide","scrollEnabled","slideStyle","shouldOptimizeUpdates","useExperimentalSnap","useScrollView","Animated","FlatList","constructor","hideCarousel","props","interpolators","initialActiveItem","componentDidMount","setTimeout","apparitionCallback","_firstItem","shouldComponentUpdate","shallowCompare","componentDidUpdate","itemsLength","nextFirstItem","nextActiveItem","hasNewSize","prevProps","componentWillUnmount","clearTimeout","_setScrollHandler","scrollEventConfig","listener","useNativeDriver","argMapping","nativeEvent","contentOffset","y","_scrollPos","x","Array","argMap","_displayWarnings","pluginName","removedProps","console","removedProp","_needsScrollView","_needsRTLAdaptations","vertical","_enableLoop","data","_shouldAnimateSlides","slideInterpolatedStyle","_shouldUseShiftLayout","_shouldUseStackLayout","_shouldUseTinderLayout","_shouldRepositionScroll","dataLength","index","_roundNumber","decimals","rounder","Math","num","Number","_isMultiple","_getCustomData","previousItems","nextItems","dataMultiplier","remainder","i","_getCustomDataLength","_getCustomIndex","_getDataIndex","baseDataIndexes","dataIndexes","j","_getPositionIndex","_getSnapOffsets","offset","_getFirstItem","_getWrappedRef","_getScrollEnabled","_setScrollEnabled","wrappedRef","_getItemMainDimension","_getItemScrollOffset","_getItemLayout","itemMainDimension","length","_getCellRendererComponent","cellStyle","zIndex","_getKeyExtractor","_getScrollOffset","event","_getContainerInnerMargin","opposite","_getActiveSlideOffset","minOffset","_getActiveItem","center","lastIndex","end","itemIndex","_getSlideInterpolatedStyle","tinderAnimatedStyles","stackAnimatedStyles","shiftAnimatedStyles","defaultAnimatedStyles","_initPositionsAndInterpolators","scrollInterpolator","_index","start","animatedValue","interpolator","stackScrollInterpolator","tinderScrollInterpolator","defaultScrollInterpolator","extrapolate","_hackActiveSlideAnimation","scrollValue","multiplier","scrollDelta","animated","_repositionScroll","repositionTo","_scrollTo","scrollToOffset","options","_onTouchStart","onTouchStart","_onTouchEnd","onTouchEnd","_onScroll","onScrollIndexChanged","scrollOffset","onScroll","_onMomentumScrollEnd","onSnapToItem","hasSnapped","onMomentumScrollEnd","_onLayout","onLayout","_snapToItem","fireCallback","forceScrollTo","requiresManualTrigger","startAutoplay","setInterval","pauseAutoPlay","clearInterval","stopAutoplay","snapToItem","positionIndex","snapToNext","newIndex","snapToPrev","triggerRenderingHack","_renderItem","animate","Component","animatedStyle","dataIndex","mainDimension","height","itemHeight","width","itemWidth","specificProps","key","keyExtractor","item","scrollPosition","carouselRef","sliderHeight","sliderWidth","_getComponentOverridableProps","visibleItems","initialNumPerSide","initialNumToRender","maxToRenderPerBatch","windowSize","automaticallyAdjustContentInsets","decelerationRate","directionalLockEnabled","disableScrollViewPanResponder","inverted","overScrollMode","pinchGestureEnabled","pointerEvents","scrollsToTop","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","_getComponentStaticProps","containerStyle","opacity","flexDirection","innerMarginStyle","paddingTop","paddingBottom","paddingLeft","paddingRight","contentContainerStyle","snapProps","snapToAlignment","snapToInterval","snapToOffsets","CellRendererComponent","getItemLayout","initialScrollIndex","numColumns","renderItem","ref","c","horizontal","scrollEventThrottle","style","render","ScrollViewComponent"],"mappings":"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","sourcesContent":["import React, { PropsWithChildren } from 'react';\nimport {\n    Animated,\n    FlatList,\n    I18nManager,\n    Platform,\n    ScrollView,\n    View,\n    StyleProp,\n    NativeSyntheticEvent,\n    NativeScrollEvent,\n    LayoutChangeEvent,\n    GestureResponderEvent,\n    ViewStyle\n} from 'react-native';\nimport shallowCompare from 'react-addons-shallow-compare';\nimport {\n    defaultScrollInterpolator,\n    stackScrollInterpolator,\n    tinderScrollInterpolator,\n    defaultAnimatedStyles,\n    shiftAnimatedStyles,\n    stackAnimatedStyles,\n    tinderAnimatedStyles\n} from '../utils/animations';\nimport type { CarouselProps, CarouselState } from './types';\n\n// Metro doesn't support dynamic imports - i.e. require() done in the component itself\n// But at the same time the following import will fail on Snack...\n// TODO: find a way to get React Native's version without having to assume the file path\n// import RN_PACKAGE from '../../../react-native/package.json';\n\nconst IS_ANDROID = Platform.OS === 'android';\n\n// React Native automatically handles RTL layouts; unfortunately, it's buggy with horizontal ScrollView\n// See https://github.com/facebook/react-native/issues/11960\n// NOTE: the following variable is not declared in the constructor\n// otherwise it is undefined at init, which messes with custom indexes\nconst IS_RTL = I18nManager.isRTL;\n\nexport class Carousel<TData> extends React.Component<\n  CarouselProps<TData>,\n  CarouselState\n> {\n  static defaultProps = {\n      activeSlideAlignment: 'center',\n      activeSlideOffset: 20,\n      apparitionDelay: 0,\n      autoplay: false,\n      autoplayDelay: 1000,\n      autoplayInterval: 3000,\n      callbackOffsetMargin: 5,\n      containerCustomStyle: {},\n      contentContainerCustomStyle: {},\n      enableSnap: true,\n      firstItem: 0,\n      hasParallaxImages: false,\n      inactiveSlideOpacity: 0.7,\n      inactiveSlideScale: 0.9,\n      inactiveSlideShift: 0,\n      layout: 'default',\n      loop: false,\n      loopClonesPerSide: 3,\n      scrollEnabled: true,\n      slideStyle: {},\n      shouldOptimizeUpdates: true,\n      useExperimentalSnap: false,\n      useScrollView: !Animated.FlatList\n  };\n\n  _activeItem: number;\n  _onScrollActiveItem: number;\n  _previousFirstItem: number;\n  _previousItemsLength: number;\n  _mounted: boolean;\n  _positions: { start: number; end: number }[];\n  _currentScrollOffset: number;\n  _scrollEnabled: boolean;\n\n  _initTimeout?: ReturnType<typeof setTimeout>;\n  _apparitionTimeout?: ReturnType<typeof setTimeout>;\n  _hackSlideAnimationTimeout?: ReturnType<typeof setTimeout>;\n  _enableAutoplayTimeout?: ReturnType<typeof setTimeout>;\n  _autoplayTimeout?: ReturnType<typeof setTimeout>;\n  _snapNoMomentumTimeout?: ReturnType<typeof setTimeout>;\n  _androidRepositioningTimeout?: ReturnType<typeof setTimeout>;\n  _autoplayInterval?: ReturnType<typeof setInterval>;\n\n  _scrollPos?: Animated.Value;\n\n  _onScrollHandler?: ReturnType<typeof Animated.event>;\n\n  _carouselRef: ScrollView | FlatList<TData> | null = null;\n\n  _autoplaying?: boolean;\n  _autoplay?: boolean;\n\n  _onLayoutInitDone?: boolean;\n\n  constructor (props: CarouselProps<TData>) {\n      super(props);\n\n      this.state = {\n          hideCarousel: !!props.apparitionDelay,\n          interpolators: []\n      };\n\n      // this._RNVersionCode = this._getRNVersionCode();\n\n      // The following values are not stored in the state because 'setState()' is asynchronous\n      // and this results in an absolutely crappy behavior on Android while swiping (see #156)\n      const initialActiveItem = this._getFirstItem(props.firstItem);\n      this._activeItem = initialActiveItem;\n      this._onScrollActiveItem = initialActiveItem;\n      this._previousFirstItem = initialActiveItem;\n      this._previousItemsLength = initialActiveItem;\n\n      this._mounted = false;\n      this._positions = [];\n      this._currentScrollOffset = 0; // Store ScrollView's scroll position\n      this._scrollEnabled = props.scrollEnabled !== false;\n\n      this._getCellRendererComponent = this._getCellRendererComponent.bind(this);\n      this._getItemLayout = this._getItemLayout.bind(this);\n      this._getKeyExtractor = this._getKeyExtractor.bind(this);\n      this._onLayout = this._onLayout.bind(this);\n      this._onScroll = this._onScroll.bind(this);\n      this._onMomentumScrollEnd = this._onMomentumScrollEnd.bind(this);\n      this._onTouchStart = this._onTouchStart.bind(this);\n      this._onTouchEnd = this._onTouchEnd.bind(this);\n      this._renderItem = this._renderItem.bind(this);\n\n      // WARNING: call this AFTER binding _onScroll\n      this._setScrollHandler(props);\n\n      // Display warnings\n      this._displayWarnings(props);\n  }\n\n  componentDidMount () {\n      const { apparitionDelay, autoplay, firstItem } = this.props;\n\n      this._mounted = true;\n      this._initPositionsAndInterpolators();\n\n      // Without 'requestAnimationFrame' or a `0` timeout, images will randomly not be rendered on Android...\n      this._initTimeout = setTimeout(() => {\n          if (!this._mounted) {\n              return;\n          }\n\n          const apparitionCallback = () => {\n              if (apparitionDelay) {\n                  this.setState({ hideCarousel: false });\n              }\n              if (autoplay) {\n                  this.startAutoplay();\n              }\n          };\n\n          // FlatList will use its own built-in prop `initialScrollIndex`\n          if (this._needsScrollView()) {\n              const _firstItem = this._getFirstItem(firstItem);\n              this._snapToItem(_firstItem, false, false, true);\n              // this._hackActiveSlideAnimation(_firstItem);\n          }\n\n          if (apparitionDelay) {\n              this._apparitionTimeout = setTimeout(() => {\n                  apparitionCallback();\n              }, apparitionDelay);\n          } else {\n              apparitionCallback();\n          }\n      }, 1);\n  }\n\n  shouldComponentUpdate (\n      nextProps: CarouselProps<TData>,\n      nextState: CarouselState\n  ): boolean {\n      if (this.props.shouldOptimizeUpdates === false) {\n          return true;\n      } else {\n          return shallowCompare(this, nextProps, nextState);\n      }\n  }\n\n  componentDidUpdate (prevProps: CarouselProps<TData>) {\n      const { interpolators } = this.state;\n      const {\n          firstItem,\n          scrollEnabled\n      } = this.props;\n      const itemsLength = this._getCustomDataLength(this.props);\n\n      if (!itemsLength) {\n          return;\n      }\n\n      const nextFirstItem = this._getFirstItem(firstItem, this.props);\n      let nextActiveItem =\n      typeof this._activeItem !== 'undefined' ?\n          this._activeItem :\n          nextFirstItem;\n\n      const hasNewSize = this.props.vertical !== prevProps.vertical ||\n       (\n           this.props.vertical && prevProps.vertical && (\n               prevProps.itemHeight !== this.props.itemHeight || prevProps.sliderHeight !== this.props.sliderHeight\n           )\n       ) || (\n          !this.props.vertical && !prevProps.vertical && (\n              prevProps.itemWidth !== this.props.itemWidth || prevProps.sliderWidth !== this.props.sliderWidth\n          )\n      );\n\n      // Prevent issues with dynamically removed items\n      if (nextActiveItem > itemsLength - 1) {\n          nextActiveItem = itemsLength - 1;\n      }\n\n      // Handle changing scrollEnabled independent of user -> carousel interaction\n      if (scrollEnabled !== prevProps.scrollEnabled) {\n          this._setScrollEnabled(scrollEnabled);\n      }\n\n      if (\n          interpolators.length !== itemsLength ||\n          hasNewSize\n      ) {\n          this._activeItem = nextActiveItem;\n          this._previousItemsLength = itemsLength;\n\n          this._initPositionsAndInterpolators(this.props);\n\n          // Handle scroll issue when dynamically removing items (see #133)\n          // This also fixes first item's active state on Android\n          // Because 'initialScrollIndex' apparently doesn't trigger scroll\n          if (this._previousItemsLength > itemsLength) {\n              this._hackActiveSlideAnimation(nextActiveItem);\n          }\n\n          if (hasNewSize) {\n              this._snapToItem(nextActiveItem, false, false, true);\n          }\n      } else if (\n          nextFirstItem !== this._previousFirstItem &&\n      nextFirstItem !== this._activeItem\n      ) {\n          this._activeItem = nextFirstItem;\n          this._previousFirstItem = nextFirstItem;\n          this._snapToItem(nextFirstItem, false, true, true);\n      }\n\n      if (this.props.onScroll !== prevProps.onScroll) {\n          this._setScrollHandler(this.props);\n      }\n  }\n\n  componentWillUnmount () {\n      this._mounted = false;\n      this.stopAutoplay();\n      // @ts-expect-error setTimeout / clearTiemout is buggy :/\n      clearTimeout(this._initTimeout);\n      // @ts-expect-error setTimeout / clearTiemout is buggy :/\n      clearTimeout(this._apparitionTimeout);\n      // @ts-expect-error setTimeout / clearTiemout is buggy :/\n      clearTimeout(this._hackSlideAnimationTimeout);\n      // @ts-expect-error setTimeout / clearTiemout is buggy :/\n      clearTimeout(this._enableAutoplayTimeout);\n      // @ts-expect-error setTimeout / clearTiemout is buggy :/\n      clearTimeout(this._autoplayTimeout);\n      // @ts-expect-error setTimeout / clearTiemout is buggy :/\n      clearTimeout(this._snapNoMomentumTimeout);\n      // @ts-expect-error setTimeout / clearTiemout is buggy :/\n      clearTimeout(this._androidRepositioningTimeout);\n  }\n\n  get realIndex () {\n      return this._activeItem;\n  }\n\n  get currentIndex () {\n      return this._getDataIndex(this._activeItem);\n  }\n\n  get currentScrollPosition () {\n      return this._currentScrollOffset;\n  }\n\n  _setScrollHandler (props: CarouselProps<TData>) {\n      // Native driver for scroll events\n      const scrollEventConfig = {\n          listener: this._onScroll,\n          useNativeDriver: true\n      };\n      this._scrollPos = new Animated.Value(0);\n      const argMapping = props.vertical ?\n          [{ nativeEvent: { contentOffset: { y: this._scrollPos } } }] :\n          [{ nativeEvent: { contentOffset: { x: this._scrollPos } } }];\n\n      // @ts-expect-error Let's ignore for now that trick\n      if (props.onScroll && Array.isArray(props.onScroll._argMapping)) {\n      // Because of a react-native issue https://github.com/facebook/react-native/issues/13294\n          argMapping.pop();\n          // @ts-expect-error Let's ignore for now that trick\n          const [argMap] = props.onScroll._argMapping;\n          if (argMap && argMap.nativeEvent && argMap.nativeEvent.contentOffset) {\n              // Shares the same animated value passed in props\n              this._scrollPos =\n          argMap.nativeEvent.contentOffset.x ||\n          argMap.nativeEvent.contentOffset.y ||\n          this._scrollPos;\n          }\n          // @ts-expect-error Let's ignore for now that trick\n          argMapping.push(...props.onScroll._argMapping);\n      }\n      this._onScrollHandler = Animated.event<NativeScrollEvent>(\n          argMapping,\n          scrollEventConfig\n      );\n  }\n\n  // This will return a future-proof version code number compatible with semantic versioning\n  // Examples: 0.59.3 -> 5903 / 0.61.4 -> 6104 / 0.62.12 -> 6212 / 1.0.2 -> 10002\n  // _getRNVersionCode () {\n  //     const version = RN_PACKAGE && RN_PACKAGE.version;\n  //     if (!version) {\n  //         return null;\n  //     }\n  //     const versionSplit = version.split('.');\n  //     if (!versionSplit || !versionSplit.length) {\n  //         return null;\n  //     }\n  //     return versionSplit[0] * 10000 +\n  //         (typeof versionSplit[1] !== 'undefined' ? versionSplit[1] * 100 : 0) +\n  //         (typeof versionSplit[2] !== 'undefined' ? versionSplit[2] * 1 : 0);\n  // }\n\n  _displayWarnings (props: CarouselProps<TData> = this.props) {\n      const pluginName = 'react-native-snap-carousel';\n      const removedProps = [\n          'activeAnimationType',\n          'activeAnimationOptions',\n          'enableMomentum',\n          'lockScrollTimeoutDuration',\n          'lockScrollWhileSnapping',\n          'onBeforeSnapToItem',\n          'swipeThreshold'\n      ] as const;\n\n      // if (this._RNVersionCode && this._RNVersionCode < 5800) {\n      //     console.error(\n      //         `${pluginName}: Version 4+ of the plugin is based on React Native props that were introduced in version 0.58. ` +\n      //         'Please downgrade to version 3.x or update your version of React Native.'\n      //     );\n      // }\n      if (!props.vertical && (!props.sliderWidth || !props.itemWidth)) {\n          console.error(\n              `${pluginName}: You need to specify both 'sliderWidth' and 'itemWidth' for horizontal carousels`\n          );\n      }\n      if (props.vertical && (!props.sliderHeight || !props.itemHeight)) {\n          console.error(\n              `${pluginName}: You need to specify both 'sliderHeight' and 'itemHeight' for vertical carousels`\n          );\n      }\n\n      removedProps.forEach((removedProp) => {\n          if (removedProp in props) {\n              console.warn(\n                  `${pluginName}: Prop ${removedProp} has been removed in version 4 of the plugin`\n              );\n          }\n      });\n  }\n\n  _needsScrollView () {\n      const { useScrollView } = this.props;\n      // Android's cell renderer is buggy and has a stange overflow\n      // TODO: a workaround might be to pass the custom animated styles directly to it\n      return IS_ANDROID ?\n          useScrollView ||\n          !Animated.FlatList ||\n          this._shouldUseStackLayout() ||\n          this._shouldUseTinderLayout() :\n          useScrollView || !Animated.FlatList;\n  }\n\n  _needsRTLAdaptations () {\n      const { vertical } = this.props;\n      return IS_RTL && IS_ANDROID && !vertical;\n  }\n\n  _enableLoop () {\n      const { data, enableSnap, loop } = this.props;\n      return enableSnap && loop && data && data.length && data.length > 1;\n  }\n\n  _shouldAnimateSlides (props: CarouselProps<TData> = this.props) {\n      const {\n          inactiveSlideOpacity,\n          inactiveSlideScale,\n          scrollInterpolator,\n          slideInterpolatedStyle\n      } = props;\n      return (\n          inactiveSlideOpacity < 1 ||\n      inactiveSlideScale < 1 ||\n      !!scrollInterpolator ||\n      !!slideInterpolatedStyle ||\n      this._shouldUseShiftLayout() ||\n      this._shouldUseStackLayout() ||\n      this._shouldUseTinderLayout()\n      );\n  }\n\n  _shouldUseShiftLayout () {\n      const { inactiveSlideShift, layout } = this.props;\n      return layout === 'default' && inactiveSlideShift !== 0;\n  }\n\n  _shouldUseStackLayout () {\n      return this.props.layout === 'stack';\n  }\n\n  _shouldUseTinderLayout () {\n      return this.props.layout === 'tinder';\n  }\n\n  _shouldRepositionScroll (index: number) {\n      const { data, enableSnap, loopClonesPerSide } = this.props;\n      const dataLength = data && data.length;\n      if (\n          !enableSnap ||\n      !dataLength ||\n      !this._enableLoop() ||\n      (index >= loopClonesPerSide && index < dataLength + loopClonesPerSide)\n      ) {\n          return false;\n      }\n      return true;\n  }\n\n  _roundNumber (num: number, decimals = 1) {\n      // https://stackoverflow.com/a/41716722/\n      const rounder = Math.pow(10, decimals);\n      return Math.round((num + Number.EPSILON) * rounder) / rounder;\n  }\n\n  _isMultiple (x: number, y: number) {\n      // This prevents Javascript precision issues: https://stackoverflow.com/a/58440614/\n      // Required because Android viewport size can return pretty complicated decimals numbers\n      return Math.round(Math.round(x / y) / (1 / y)) === Math.round(x);\n  }\n\n  _getCustomData (props: CarouselProps<TData> = this.props) {\n      const { data, loopClonesPerSide } = props;\n      const dataLength = data && data.length;\n\n      if (!dataLength) {\n          return [];\n      }\n\n      if (!this._enableLoop()) {\n          return data;\n      }\n\n      let previousItems = [];\n      let nextItems = [];\n\n      if (loopClonesPerSide > dataLength) {\n          const dataMultiplier = Math.floor(loopClonesPerSide / dataLength);\n          const remainder = loopClonesPerSide % dataLength;\n\n          for (let i = 0; i < dataMultiplier; i++) {\n              previousItems.push(...data);\n              nextItems.push(...data);\n          }\n\n          previousItems.unshift(...data.slice(-remainder));\n          nextItems.push(...data.slice(0, remainder));\n      } else {\n          previousItems = data.slice(-loopClonesPerSide);\n          nextItems = data.slice(0, loopClonesPerSide);\n      }\n\n      return previousItems.concat(data, nextItems);\n  }\n\n  _getCustomDataLength (props: CarouselProps<TData> = this.props) {\n      const { data, loopClonesPerSide } = props;\n      const dataLength = data && data.length;\n\n      if (!dataLength) {\n          return 0;\n      }\n\n      return this._enableLoop() ? dataLength + 2 * loopClonesPerSide : dataLength;\n  }\n\n  _getCustomIndex (index: number, props: CarouselProps<TData> = this.props) {\n      const itemsLength = this._getCustomDataLength(props);\n\n      if (!itemsLength || typeof index === 'undefined') {\n          return 0;\n      }\n\n      return this._needsRTLAdaptations() ? itemsLength - index - 1 : index;\n  }\n\n  _getDataIndex (index: number) {\n      const { data, loopClonesPerSide } = this.props;\n      const dataLength = data && data.length;\n\n      if (!this._enableLoop() || !dataLength) {\n          return index;\n      }\n\n      if (index >= dataLength + loopClonesPerSide) {\n          return loopClonesPerSide > dataLength ?\n              (index - loopClonesPerSide) % dataLength :\n              index - dataLength - loopClonesPerSide;\n      } else if (index < loopClonesPerSide) {\n      // TODO: is there a simpler way of determining the interpolated index?\n          if (loopClonesPerSide > dataLength) {\n              const baseDataIndexes = [];\n              const dataIndexes = [];\n              const dataMultiplier = Math.floor(loopClonesPerSide / dataLength);\n              const remainder = loopClonesPerSide % dataLength;\n\n              for (let i = 0; i < dataLength; i++) {\n                  baseDataIndexes.push(i);\n              }\n\n              for (let j = 0; j < dataMultiplier; j++) {\n                  dataIndexes.push(...baseDataIndexes);\n              }\n\n              dataIndexes.unshift(...baseDataIndexes.slice(-remainder));\n              return dataIndexes[index];\n          } else {\n              return index + dataLength - loopClonesPerSide;\n          }\n      } else {\n          return index - loopClonesPerSide;\n      }\n  }\n\n  // Used with `snapToItem()` and 'PaginationDot'\n  _getPositionIndex (index: number) {\n      const { loop, loopClonesPerSide } = this.props;\n      return loop ? index + loopClonesPerSide : index;\n  }\n\n  _getSnapOffsets (props: CarouselProps<TData> = this.props) {\n      const offset = this._getItemMainDimension();\n      return [...Array(this._getCustomDataLength(props))].map((_, i) => {\n          return i * offset;\n      });\n  }\n\n  _getFirstItem (index: number, props: CarouselProps<TData> = this.props) {\n      const { loopClonesPerSide } = props;\n      const itemsLength = this._getCustomDataLength(props);\n\n      if (!itemsLength || index > itemsLength - 1 || index < 0) {\n          return 0;\n      }\n\n      return this._enableLoop() ? index + loopClonesPerSide : index;\n  }\n\n  _getWrappedRef () {\n      // Starting with RN 0.62, we should no longer call `getNode()` on the ref of an Animated component\n      if (\n          this._carouselRef &&\n      ((this._needsScrollView() &&\n        (this._carouselRef as ScrollView).scrollTo) ||\n        (!this._needsScrollView() &&\n          (this._carouselRef as FlatList).scrollToOffset))\n      ) {\n          return this._carouselRef;\n      }\n      // https://github.com/facebook/react-native/issues/10635\n      // https://stackoverflow.com/a/48786374/8412141\n      return (\n          this._carouselRef &&\n      // @ts-expect-error This is for before 0.62\n      this._carouselRef.getNode &&\n      // @ts-expect-error This is for before 0.62\n      this._carouselRef.getNode()\n      );\n  }\n\n  _getScrollEnabled () {\n      return this._scrollEnabled;\n  }\n\n  _setScrollEnabled (scrollEnabled = true) {\n      const wrappedRef = this._getWrappedRef();\n\n      if (!wrappedRef || !wrappedRef.setNativeProps) {\n          return;\n      }\n\n      // 'setNativeProps()' is used instead of 'setState()' because the latter\n      // really takes a toll on Android behavior when momentum is disabled\n      wrappedRef.setNativeProps({ scrollEnabled });\n      this._scrollEnabled = scrollEnabled;\n  }\n\n  _getItemMainDimension () {\n      return this.props.vertical ? this.props.itemHeight : this.props.itemWidth;\n  }\n\n  _getItemScrollOffset (index: number) {\n      return (\n          this._positions && this._positions[index] && this._positions[index].start\n      );\n  }\n\n  _getItemLayout (_: TData[], index: number) {\n      const itemMainDimension = this._getItemMainDimension();\n      return {\n          index,\n          length: itemMainDimension,\n          offset: itemMainDimension * index // + this._getContainerInnerMargin()\n      };\n  }\n\n  // This will allow us to have a proper zIndex even with a FlatList\n  // https://github.com/facebook/react-native/issues/18616#issuecomment-389444165\n  _getCellRendererComponent ({\n      children,\n      index,\n      style,\n      ...props\n  }: PropsWithChildren<{ index: number; style: StyleProp<ViewStyle> }>) {\n      const cellStyle = [\n          style,\n          !IS_ANDROID ? { zIndex: this._getCustomDataLength() - index } : {}\n      ];\n\n      return (\n          <View style={cellStyle} key={index} {...props}>\n              {children}\n          </View>\n      );\n  }\n\n  _getKeyExtractor (_: TData, index: number) {\n      return this._needsScrollView() ?\n          `scrollview-item-${index}` :\n          `flatlist-item-${index}`;\n  }\n\n  _getScrollOffset (event: NativeSyntheticEvent<NativeScrollEvent>) {\n      const { vertical } = this.props;\n      return (\n          (event &&\n        event.nativeEvent &&\n        event.nativeEvent.contentOffset &&\n        event.nativeEvent.contentOffset[vertical ? 'y' : 'x']) ||\n      0\n      );\n  }\n\n  _getContainerInnerMargin (opposite = false) {\n      const { activeSlideAlignment } = this.props;\n\n      if (\n          (activeSlideAlignment === 'start' && !opposite) ||\n      (activeSlideAlignment === 'end' && opposite)\n      ) {\n          return 0;\n      } else if (\n          (activeSlideAlignment === 'end' && !opposite) ||\n      (activeSlideAlignment === 'start' && opposite)\n      ) {\n          return this.props.vertical ?\n              this.props.sliderHeight - this.props.itemHeight :\n              this.props.sliderWidth - this.props.itemWidth;\n      } else {\n          return this.props.vertical ?\n              (this.props.sliderHeight - this.props.itemHeight) / 2 :\n              (this.props.sliderWidth - this.props.itemWidth) / 2;\n      }\n  }\n\n  _getActiveSlideOffset () {\n      const { activeSlideOffset } = this.props;\n      const itemMainDimension = this._getItemMainDimension();\n      const minOffset = 10;\n      // Make sure activeSlideOffset never prevents the active area from being at least 10 px wide\n      return itemMainDimension / 2 - activeSlideOffset >= minOffset ?\n          activeSlideOffset :\n          minOffset;\n  }\n\n  _getActiveItem (offset: number) {\n      const itemMainDimension = this._getItemMainDimension();\n      const center = offset + itemMainDimension / 2;\n      const activeSlideOffset = this._getActiveSlideOffset();\n      const lastIndex = this._positions.length - 1;\n      let itemIndex;\n\n      if (offset <= 0) {\n          return 0;\n      }\n\n      if (\n          this._positions[lastIndex] &&\n      offset >= this._positions[lastIndex].start\n      ) {\n          return lastIndex;\n      }\n\n      for (let i = 0; i < this._positions.length; i++) {\n          const { start, end } = this._positions[i];\n          if (\n              center + activeSlideOffset >= start &&\n        center - activeSlideOffset <= end\n          ) {\n              itemIndex = i;\n              break;\n          }\n      }\n\n      return itemIndex || 0;\n  }\n\n  _getSlideInterpolatedStyle (index: number, animatedValue: Animated.AnimatedInterpolation) {\n      const { layoutCardOffset, slideInterpolatedStyle } = this.props;\n\n      if (slideInterpolatedStyle) {\n          return slideInterpolatedStyle(index, animatedValue, this.props);\n      } else if (this._shouldUseTinderLayout()) {\n          return tinderAnimatedStyles(\n              index,\n              animatedValue,\n              this.props,\n              layoutCardOffset\n          );\n      } else if (this._shouldUseStackLayout()) {\n          return stackAnimatedStyles(\n              index,\n              animatedValue,\n              this.props,\n              layoutCardOffset\n          );\n      } else if (this._shouldUseShiftLayout()) {\n          return shiftAnimatedStyles(index, animatedValue, this.props);\n      } else {\n          return defaultAnimatedStyles(index, animatedValue, this.props);\n      }\n  }\n\n  _initPositionsAndInterpolators (props: CarouselProps<TData> = this.props) {\n      const { data, scrollInterpolator } = props;\n      const itemMainDimension = this._getItemMainDimension();\n\n      if (!data || !data.length) {\n          return;\n      }\n\n      const interpolators: Animated.AnimatedInterpolation[] = [];\n      this._positions = [];\n\n      this._getCustomData(props).forEach((_itemData, index) => {\n          const _index = this._getCustomIndex(index, props);\n          let animatedValue: Animated.AnimatedInterpolation;\n\n          this._positions[index] = {\n              start: index * itemMainDimension,\n              end: index * itemMainDimension + itemMainDimension\n          };\n\n          if (!this._shouldAnimateSlides(props) || !this._scrollPos) {\n              animatedValue = new Animated.Value(1);\n          } else {\n              let interpolator;\n\n              if (scrollInterpolator) {\n                  interpolator = scrollInterpolator(_index, props);\n              } else if (this._shouldUseStackLayout()) {\n                  interpolator = stackScrollInterpolator(_index, props);\n              } else if (this._shouldUseTinderLayout()) {\n                  interpolator = tinderScrollInterpolator(_index, props);\n              }\n\n              if (\n                  !interpolator ||\n          !interpolator.inputRange ||\n          !interpolator.outputRange\n              ) {\n                  interpolator = defaultScrollInterpolator(_index, props);\n              }\n\n              animatedValue = this._scrollPos.interpolate({\n                  ...interpolator,\n                  extrapolate: 'clamp'\n              });\n          }\n\n          interpolators.push(animatedValue);\n      });\n\n      this.setState({ interpolators });\n  }\n\n  _hackActiveSlideAnimation (index: number, scrollValue = 1) {\n      const offset = this._getItemScrollOffset(index);\n\n      if (!this._mounted || !this._carouselRef || typeof offset === 'undefined') {\n          return;\n      }\n\n      const multiplier = this._currentScrollOffset === 0 ? 1 : -1;\n      const scrollDelta = scrollValue * multiplier;\n\n      this._scrollTo({ offset: offset + scrollDelta, animated: false });\n\n      // @ts-expect-error setTimeout / clearTiemout is buggy :/\n      clearTimeout(this._hackSlideAnimationTimeout);\n      this._hackSlideAnimationTimeout = setTimeout(() => {\n          this._scrollTo({ offset, animated: false });\n      }, 1); // works randomly when set to '0'\n  }\n\n  _repositionScroll (index: number, animated = false) {\n      const { data, loopClonesPerSide } = this.props;\n      const dataLength = data && data.length;\n\n      if (typeof index === 'undefined' || !this._shouldRepositionScroll(index)) {\n          return;\n      }\n\n      let repositionTo = index;\n\n      if (index >= dataLength + loopClonesPerSide) {\n          repositionTo = index - dataLength;\n      } else if (index < loopClonesPerSide) {\n          repositionTo = index + dataLength;\n      }\n\n      this._snapToItem(repositionTo, animated, false);\n  }\n\n  _scrollTo ({\n      offset,\n      index,\n      animated = true\n  }: {\n    offset: number;\n    index?: number;\n    animated: boolean;\n  }) {\n      const { vertical } = this.props;\n      const wrappedRef = this._getWrappedRef();\n      if (\n          !this._mounted ||\n      !wrappedRef ||\n      (typeof offset === 'undefined' && typeof index === 'undefined')\n      ) {\n          return;\n      }\n\n      let scrollToOffset;\n      if (typeof index !== 'undefined') {\n          scrollToOffset = this._getItemScrollOffset(index);\n      } else {\n          scrollToOffset = offset;\n      }\n\n      if (typeof scrollToOffset === 'undefined') {\n          return;\n      }\n\n      const options = this._needsScrollView() ?\n          {\n              x: vertical ? 0 : offset,\n              y: vertical ? offset : 0,\n              animated\n          } :\n          {\n              offset,\n              animated\n          };\n\n      if (this._needsScrollView()) {\n          wrappedRef.scrollTo(options);\n      } else {\n          wrappedRef.scrollToOffset(options);\n      }\n  }\n\n  _onTouchStart (event: GestureResponderEvent) {\n      const { onTouchStart } = this.props;\n\n      // `onTouchStart` is fired even when `scrollEnabled` is set to `false`\n      if (this._getScrollEnabled() !== false && this._autoplaying) {\n          this.pauseAutoPlay();\n      }\n\n      onTouchStart && onTouchStart(event);\n  }\n\n  _onTouchEnd (event: GestureResponderEvent) {\n      const { onTouchEnd } = this.props;\n\n      if (\n          this._getScrollEnabled() !== false &&\n      this._autoplay &&\n      !this._autoplaying\n      ) {\n      // This event is buggy on Android, so a fallback is provided in _onMomentumScrollEnd()\n          this.startAutoplay();\n      }\n\n      onTouchEnd && onTouchEnd(event);\n  }\n\n  _onScroll (event: NativeSyntheticEvent<NativeScrollEvent>) {\n      const { onScroll, onScrollIndexChanged } = this.props;\n      const scrollOffset = event ?\n          this._getScrollOffset(event) :\n          this._currentScrollOffset;\n      const nextActiveItem = this._getActiveItem(scrollOffset);\n\n      this._currentScrollOffset = scrollOffset;\n\n      if (nextActiveItem !== this._onScrollActiveItem) {\n          this._onScrollActiveItem = nextActiveItem;\n          onScrollIndexChanged &&\n        onScrollIndexChanged(this._getDataIndex(nextActiveItem));\n      }\n\n      if (typeof onScroll === 'function' && event) {\n          onScroll(event);\n      }\n  }\n\n  _onMomentumScrollEnd (event: NativeSyntheticEvent<NativeScrollEvent>) {\n      const { autoplayDelay, onMomentumScrollEnd, onSnapToItem } = this.props;\n      const scrollOffset = event ?\n          this._getScrollOffset(event) :\n          this._currentScrollOffset;\n      const nextActiveItem = this._getActiveItem(scrollOffset);\n      const hasSnapped = this._isMultiple(\n          scrollOffset,\n          this.props.vertical ? this.props.itemHeight : this.props.itemWidth\n      );\n\n      // WARNING: everything in this condition will probably need to be called on _snapToItem as well because:\n      // 1. `onMomentumScrollEnd` won't be called if the scroll isn't animated\n      // 2. `onMomentumScrollEnd` won't be called at all on Android when scrolling programmatically\n      if (nextActiveItem !== this._activeItem) {\n          this._activeItem = nextActiveItem;\n          onSnapToItem && onSnapToItem(this._getDataIndex(nextActiveItem));\n\n          if (hasSnapped) {\n              this._repositionScroll(nextActiveItem);\n          }\n      }\n\n      onMomentumScrollEnd && onMomentumScrollEnd(event);\n\n      // The touchEnd event is buggy on Android, so this will serve as a fallback whenever needed\n      // https://github.com/facebook/react-native/issues/9439\n      if (IS_ANDROID && this._autoplay && !this._autoplaying) {\n      // @ts-expect-error setTimeout / clearTiemout is buggy :/\n          clearTimeout(this._enableAutoplayTimeout);\n          this._enableAutoplayTimeout = setTimeout(() => {\n              this.startAutoplay();\n          }, autoplayDelay);\n      }\n  }\n\n  _onLayout (event: LayoutChangeEvent) {\n      const { onLayout } = this.props;\n\n      // Prevent unneeded actions during the first 'onLayout' (triggered on init)\n      if (this._onLayoutInitDone) {\n          this._initPositionsAndInterpolators();\n          this._snapToItem(this._activeItem, false, false, true);\n      } else {\n          this._onLayoutInitDone = true;\n      }\n\n      onLayout && onLayout(event);\n  }\n\n  _snapToItem (\n      index: number,\n      animated = true,\n      fireCallback = true,\n      forceScrollTo = false\n  ) {\n      const { onSnapToItem } = this.props;\n      const itemsLength = this._getCustomDataLength();\n      const wrappedRef = this._getWrappedRef();\n\n      if (!itemsLength || !wrappedRef) {\n          return;\n      }\n\n      if (!index || index < 0) {\n          index = 0;\n      } else if (itemsLength > 0 && index >= itemsLength) {\n          index = itemsLength - 1;\n      }\n\n      if (index === this._activeItem && !forceScrollTo) {\n          return;\n      }\n\n      const offset = this._getItemScrollOffset(index);\n\n      if (offset === undefined) {\n          return;\n      }\n\n      this._scrollTo({ offset, animated });\n\n      // On both platforms, `onMomentumScrollEnd` won't be triggered if the scroll isn't animated\n      // so we need to trigger the callback manually\n      // On Android `onMomentumScrollEnd` won't be triggered when scrolling programmatically\n      // Therefore everything critical needs to be manually called here as well, even though the timing might be off\n      const requiresManualTrigger = !animated || IS_ANDROID;\n      if (requiresManualTrigger) {\n          this._activeItem = index;\n\n          if (fireCallback) {\n              onSnapToItem && onSnapToItem(this._getDataIndex(index));\n          }\n\n          // Repositioning on Android\n          if (IS_ANDROID && this._shouldRepositionScroll(index)) {\n              if (animated) {\n                  this._androidRepositioningTimeout = setTimeout(() => {\n                      // Without scroll animation, the behavior is completely buggy...\n                      this._repositionScroll(index, true);\n                  }, 400); // Approximate scroll duration on Android\n              } else {\n                  this._repositionScroll(index);\n              }\n          }\n      }\n  }\n\n  startAutoplay () {\n      const { autoplayInterval, autoplayDelay } = this.props;\n      this._autoplay = true;\n\n      if (this._autoplaying) {\n          return;\n      }\n\n      // @ts-expect-error setTimeout / clearTiemout is buggy :/\n      clearTimeout(this._autoplayTimeout);\n      this._autoplayTimeout = setTimeout(() => {\n          this._autoplaying = true;\n          this._autoplayInterval = setInterval(() => {\n              if (this._autoplaying) {\n                  this.snapToNext();\n              }\n          }, autoplayInterval);\n      }, autoplayDelay);\n  }\n\n  pauseAutoPlay () {\n      this._autoplaying = false;\n      // @ts-expect-error setTimeout / clearTiemout is buggy :/\n      clearTimeout(this._autoplayTimeout);\n      // @ts-expect-error setTimeout / clearTiemout is buggy :/\n      clearTimeout(this._enableAutoplayTimeout);\n      // @ts-expect-error setTimeout / clearTiemout is buggy :/\n      clearInterval(this._autoplayInterval);\n  }\n\n  stopAutoplay () {\n      this._autoplay = false;\n      this.pauseAutoPlay();\n  }\n\n  snapToItem (index: number, animated = true, fireCallback = true) {\n      if (!index || index < 0) {\n          index = 0;\n      }\n\n      const positionIndex = this._getPositionIndex(index);\n\n      if (positionIndex === this._activeItem) {\n          return;\n      }\n\n      this._snapToItem(positionIndex, animated, fireCallback);\n  }\n\n  snapToNext (animated = true, fireCallback = true) {\n      const itemsLength = this._getCustomDataLength();\n\n      let newIndex = this._activeItem + 1;\n      if (newIndex > itemsLength - 1) {\n          newIndex = 0;\n      }\n      this._snapToItem(newIndex, animated, fireCallback);\n  }\n\n  snapToPrev (animated = true, fireCallback = true) {\n      const itemsLength = this._getCustomDataLength();\n\n      let newIndex = this._activeItem - 1;\n      if (newIndex < 0) {\n          newIndex = itemsLength - 1;\n      }\n      this._snapToItem(newIndex, animated, fireCallback);\n  }\n\n  // https://github.com/facebook/react-native/issues/1831#issuecomment-231069668\n  triggerRenderingHack (offset = 1) {\n      this._hackActiveSlideAnimation(this._activeItem, offset);\n  }\n\n  _renderItem ({ item, index }: { item: TData; index: number }) {\n      const { interpolators } = this.state;\n      const {\n          keyExtractor,\n          slideStyle\n      } = this.props;\n      const animatedValue = interpolators && interpolators[index];\n\n      if (typeof animatedValue === 'undefined') {\n          return null;\n      }\n\n      const animate = this._shouldAnimateSlides();\n      const Component = animate ? Animated.View : View;\n      const animatedStyle = animate ?\n          this._getSlideInterpolatedStyle(index, animatedValue) :\n          {};\n      const dataIndex = this._getDataIndex(index);\n\n      const mainDimension = this.props.vertical ?\n          { height: this.props.itemHeight } :\n          { width: this.props.itemWidth };\n      const specificProps = this._needsScrollView() ?\n          {\n              key: keyExtractor ?\n                  keyExtractor(item, index) :\n                  this._getKeyExtractor(item, index)\n          } :\n          {};\n\n      return (\n          <Component\n            style={[mainDimension, slideStyle, animatedStyle]}\n            pointerEvents='box-none'\n            {...specificProps}\n          >\n              {this.props.vertical ? this.props.renderItem({ item, index, dataIndex }, {\n                  scrollPosition: this._scrollPos,\n                  carouselRef: this._carouselRef,\n                  vertical: this.props.vertical,\n                  sliderHeight: this.props.sliderHeight,\n                  itemHeight: this.props.itemHeight\n              }) : this.props.renderItem({ item, index, dataIndex }, {\n                  scrollPosition: this._scrollPos,\n                  carouselRef: this._carouselRef,\n                  vertical: !!this.props.vertical,\n                  sliderWidth: this.props.sliderWidth,\n                  itemWidth: this.props.itemWidth\n              })}\n          </Component>\n      );\n  }\n\n  _getComponentOverridableProps () {\n      const { hideCarousel } = this.state;\n      const { loopClonesPerSide } = this.props;\n      const visibleItems =\n      Math.ceil(\n          this.props.vertical ?\n              this.props.sliderHeight / this.props.itemHeight :\n              this.props.sliderWidth / this.props.itemWidth\n      ) + 1;\n      const initialNumPerSide = this._enableLoop() ? loopClonesPerSide : 2;\n      const initialNumToRender = visibleItems + initialNumPerSide * 2;\n      const maxToRenderPerBatch = initialNumToRender + initialNumPerSide * 2;\n      const windowSize = maxToRenderPerBatch;\n\n      const specificProps = !this._needsScrollView() ?\n          {\n              initialNumToRender,\n              maxToRenderPerBatch,\n              windowSize\n          // updateCellsBatchingPeriod\n          } :\n          {};\n\n      return {\n          ...specificProps,\n          automaticallyAdjustContentInsets: false,\n          decelerationRate: 'fast' as const,\n          directionalLockEnabled: true,\n          disableScrollViewPanResponder: false, // If set to `true`, touch events will be triggered too easily\n          inverted: this._needsRTLAdaptations(),\n          overScrollMode: 'never' as const,\n          pinchGestureEnabled: false,\n          pointerEvents: hideCarousel ? 'none' as const : 'auto' as const,\n          // removeClippedSubviews: !this._needsScrollView(),\n          // renderToHardwareTextureAndroid: true,\n          scrollsToTop: false,\n          showsHorizontalScrollIndicator: false,\n          showsVerticalScrollIndicator: false\n      };\n  }\n\n  _getComponentStaticProps () {\n      const { hideCarousel } = this.state;\n      const {\n          activeSlideAlignment,\n          CellRendererComponent,\n          containerCustomStyle,\n          contentContainerCustomStyle,\n          firstItem,\n          getItemLayout,\n          keyExtractor,\n          style,\n          useExperimentalSnap\n      } = this.props;\n\n      const containerStyle = [\n      // { overflow: 'hidden' },\n          containerCustomStyle || style || {},\n          hideCarousel ? { opacity: 0 } : {},\n          this.props.vertical ?\n              { height: this.props.sliderHeight, flexDirection: 'column' as const } : // LTR hack; see https://github.com/facebook/react-native/issues/11960\n          // and https://github.com/facebook/react-native/issues/13100#issuecomment-328986423\n              {\n                  width: this.props.sliderWidth,\n                  flexDirection: this._needsRTLAdaptations() ? 'row-reverse' as const : 'row' as const\n              }\n      ];\n\n      const innerMarginStyle = this.props.vertical ?\n          {\n              paddingTop: this._getContainerInnerMargin(),\n              paddingBottom: this._getContainerInnerMargin(true)\n          } :\n          {\n              paddingLeft: this._getContainerInnerMargin(),\n              paddingRight: this._getContainerInnerMargin(true)\n          };\n\n      const contentContainerStyle = [\n          !useExperimentalSnap ? innerMarginStyle : {},\n          contentContainerCustomStyle || {}\n      ];\n\n      // WARNING: `snapToAlignment` won't work as intended because of the following:\n      // https://github.com/facebook/react-native/blob/d0871d0a9a373e1d3ac35da46c85c0d0e793116d/React/Views/ScrollView/RCTScrollView.m#L751-L755\n      // - Snap points will be off\n      // - Slide animations will be off\n      // - Last items won't be set as active (no `onSnapToItem` callback)\n      // Recommended only with large slides and `activeSlideAlignment` set to `start` for the time being\n      const snapProps = useExperimentalSnap ?\n          {\n          // disableIntervalMomentum: true, // Slide ± one item at a time\n              snapToAlignment: activeSlideAlignment,\n              snapToInterval: this._getItemMainDimension()\n          } :\n          {\n              snapToOffsets: this._getSnapOffsets()\n          };\n\n      // Flatlist specifics\n      const specificProps = !this._needsScrollView() ?\n          {\n              CellRendererComponent:\n            CellRendererComponent || this._getCellRendererComponent,\n              getItemLayout: getItemLayout || this._getItemLayout,\n              initialScrollIndex: this._getFirstItem(firstItem),\n              keyExtractor: keyExtractor || this._getKeyExtractor,\n              numColumns: 1,\n              renderItem: this._renderItem\n          } :\n          {};\n\n      return {\n          ...specificProps,\n          ...snapProps,\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ref: (c: any) => {\n              this._carouselRef = c as FlatList<TData> | ScrollView;\n          },\n          contentContainerStyle: contentContainerStyle,\n          data: this._getCustomData(),\n          horizontal: !this.props.vertical,\n          scrollEventThrottle: 1,\n          style: containerStyle,\n          onLayout: this._onLayout,\n          onMomentumScrollEnd: this._onMomentumScrollEnd,\n          onScroll: this._onScrollHandler,\n          onTouchStart: this._onTouchStart,\n          onTouchEnd: this._onTouchEnd\n      };\n  }\n\n  render () {\n      const { data, renderItem, useScrollView } = this.props;\n\n      if (!data || !renderItem) {\n          return null;\n      }\n\n      const props = {\n          ...this._getComponentOverridableProps(),\n          ...this.props,\n          ...this._getComponentStaticProps()\n      };\n\n      const ScrollViewComponent =\n      typeof useScrollView === 'function' ? useScrollView : Animated.ScrollView;\n\n      return this._needsScrollView() || !Animated.FlatList ? (\n          <ScrollViewComponent {...props}>\n              {this._getCustomData().map((item, index) => {\n                  return this._renderItem({ item, index });\n              })}\n          </ScrollViewComponent>\n      ) : (\n          // @ts-expect-error Seems complicated to make TS 100% happy, while sharing that many things between\n          // flatlist && scrollview implementation. I'll prob try to rewrite parts of the logic to overcome that.\n          <Animated.FlatList {...props} />\n      );\n  }\n}\n\nexport default Carousel;\n"]},"metadata":{},"sourceType":"module"}