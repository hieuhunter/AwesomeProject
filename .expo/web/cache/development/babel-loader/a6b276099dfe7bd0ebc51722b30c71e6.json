{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"./Pagination.style\";\n\nvar PaginationDot = function (_PureComponent) {\n  _inherits(PaginationDot, _PureComponent);\n\n  var _super = _createSuper(PaginationDot);\n\n  function PaginationDot(props) {\n    var _this;\n\n    _classCallCheck(this, PaginationDot);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      animColor: new Animated.Value(0),\n      animOpacity: new Animated.Value(0),\n      animTransform: new Animated.Value(0)\n    };\n    return _this;\n  }\n\n  _createClass(PaginationDot, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this._animate(1);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.active !== this.props.active) {\n        this._animate(this.props.active ? 1 : 0);\n      }\n    }\n  }, {\n    key: \"_animate\",\n    value: function _animate() {\n      var toValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var _this$state = this.state,\n          animColor = _this$state.animColor,\n          animOpacity = _this$state.animOpacity,\n          animTransform = _this$state.animTransform;\n      var _this$props = this.props,\n          animatedDuration = _this$props.animatedDuration,\n          animatedFriction = _this$props.animatedFriction,\n          animatedTension = _this$props.animatedTension;\n      var commonProperties = {\n        toValue: toValue,\n        isInteraction: false,\n        useNativeDriver: !this._shouldAnimateColor\n      };\n      var animations = [Animated.timing(animOpacity, _objectSpread({\n        easing: Easing.linear,\n        duration: animatedDuration\n      }, commonProperties)), Animated.spring(animTransform, _objectSpread({\n        friction: animatedFriction,\n        tension: animatedTension\n      }, commonProperties))];\n\n      if (this._shouldAnimateColor) {\n        animations.push(Animated.timing(animColor, _objectSpread({\n          easing: Easing.linear\n        }, commonProperties)));\n      }\n\n      Animated.parallel(animations).start();\n    }\n  }, {\n    key: \"_shouldAnimateColor\",\n    get: function get() {\n      var _this$props2 = this.props,\n          color = _this$props2.color,\n          inactiveColor = _this$props2.inactiveColor;\n      return color && inactiveColor;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          animColor = _this$state2.animColor,\n          animOpacity = _this$state2.animOpacity,\n          animTransform = _this$state2.animTransform;\n      var _this$props3 = this.props,\n          active = _this$props3.active,\n          activeOpacity = _this$props3.activeOpacity,\n          carouselRef = _this$props3.carouselRef,\n          color = _this$props3.color,\n          containerStyle = _this$props3.containerStyle,\n          inactiveColor = _this$props3.inactiveColor,\n          inactiveStyle = _this$props3.inactiveStyle,\n          inactiveOpacity = _this$props3.inactiveOpacity,\n          inactiveScale = _this$props3.inactiveScale,\n          index = _this$props3.index,\n          style = _this$props3.style,\n          tappable = _this$props3.tappable,\n          delayPressInDot = _this$props3.delayPressInDot;\n      var animatedStyle = {\n        opacity: animOpacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [inactiveOpacity, 1]\n        }),\n        transform: [{\n          scale: animTransform.interpolate({\n            inputRange: [0, 1],\n            outputRange: [inactiveScale, 1]\n          })\n        }]\n      };\n      var animatedColor = this._shouldAnimateColor && inactiveColor && color ? {\n        backgroundColor: animColor.interpolate({\n          inputRange: [0, 1],\n          outputRange: [inactiveColor, color]\n        })\n      } : {};\n      var dotContainerStyle = [styles.sliderPaginationDotContainer, containerStyle || {}];\n      var dotStyle = [styles.sliderPaginationDot, style || {}, !active && inactiveStyle || {}, animatedStyle, animatedColor];\n      var onPress = tappable && (!!index || index === 0) ? function () {\n        try {\n          var currentRef = carouselRef && 'current' in carouselRef ? carouselRef.current : carouselRef;\n\n          currentRef._snapToItem(currentRef._getPositionIndex(index));\n        } catch (error) {\n          console.warn('react-native-snap-carousel | Pagination: ' + '`carouselRef` has to be a Carousel ref.\\n' + error);\n        }\n      } : undefined;\n      return React.createElement(TouchableOpacity, {\n        accessible: false,\n        style: dotContainerStyle,\n        activeOpacity: tappable ? activeOpacity : 1,\n        onPress: onPress,\n        delayPressIn: delayPressInDot\n      }, React.createElement(Animated.View, {\n        style: dotStyle\n      }));\n    }\n  }]);\n\n  return PaginationDot;\n}(PureComponent);\n\nexport { PaginationDot as default };","map":{"version":3,"sources":["PaginationDot.tsx"],"names":["constructor","animColor","Animated","animOpacity","animTransform","componentDidMount","componentDidUpdate","prevProps","_animate","toValue","animatedTension","commonProperties","isInteraction","useNativeDriver","_shouldAnimateColor","animations","easing","Easing","duration","friction","tension","inactiveColor","color","render","delayPressInDot","animatedStyle","opacity","inputRange","outputRange","transform","scale","animatedColor","backgroundColor","dotContainerStyle","styles","containerStyle","dotStyle","style","onPress","index","currentRef","carouselRef","console","tappable"],"mappings":"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","sourcesContent":["import React, { PureComponent, RefObject } from 'react';\nimport {\n    Animated,\n    Easing,\n    TouchableOpacity,\n    StyleProp,\n    ViewStyle\n} from 'react-native';\nimport styles from './Pagination.style';\nimport type Carousel from 'src/carousel/Carousel';\n\ntype PaginationDotProps<TData> = {\n  inactiveOpacity: number;\n  inactiveScale: number;\n  active?: boolean;\n  activeOpacity?: number;\n  animatedDuration?: number;\n  animatedFriction?: number;\n  animatedTension?: number;\n  carouselRef?: Carousel<TData> | RefObject<Carousel<TData>> | null;\n  color?: string;\n  containerStyle?: StyleProp<ViewStyle>;\n  delayPressInDot?: number;\n  inactiveColor?: string;\n  inactiveStyle?: StyleProp<ViewStyle>;\n  index?: number;\n  style?: StyleProp<ViewStyle>;\n  tappable?: boolean;\n};\n\ntype PaginationDotState = {\n  animColor: Animated.Value;\n  animOpacity: Animated.Value;\n  animTransform: Animated.Value;\n};\n\nexport default class PaginationDot<TData> extends PureComponent<\n  PaginationDotProps<TData>,\n  PaginationDotState\n> {\n    constructor (props: PaginationDotProps<TData>) {\n        super(props);\n        this.state = {\n            animColor: new Animated.Value(0),\n            animOpacity: new Animated.Value(0),\n            animTransform: new Animated.Value(0)\n        };\n    }\n\n    componentDidMount () {\n        if (this.props.active) {\n            this._animate(1);\n        }\n    }\n\n    componentDidUpdate (prevProps: PaginationDotProps<TData>) {\n        if (prevProps.active !== this.props.active) {\n            this._animate(this.props.active ? 1 : 0);\n        }\n    }\n\n    _animate (toValue = 0) {\n        const { animColor, animOpacity, animTransform } = this.state;\n        const { animatedDuration, animatedFriction, animatedTension } = this.props;\n\n        const commonProperties = {\n            toValue,\n            isInteraction: false,\n            useNativeDriver: !this._shouldAnimateColor\n        };\n\n        const animations = [\n            Animated.timing(animOpacity, {\n                easing: Easing.linear,\n                duration: animatedDuration,\n                ...commonProperties\n            }),\n            Animated.spring(animTransform, {\n                friction: animatedFriction,\n                tension: animatedTension,\n                ...commonProperties\n            })\n        ];\n\n        if (this._shouldAnimateColor) {\n            animations.push(\n                Animated.timing(animColor, {\n                    easing: Easing.linear,\n                    ...commonProperties\n                })\n            );\n        }\n\n        Animated.parallel(animations).start();\n    }\n\n    get _shouldAnimateColor () {\n        const { color, inactiveColor } = this.props;\n        return color && inactiveColor;\n    }\n\n    render () {\n        const { animColor, animOpacity, animTransform } = this.state;\n        const {\n            active,\n            activeOpacity,\n            carouselRef,\n            color,\n            containerStyle,\n            inactiveColor,\n            inactiveStyle,\n            inactiveOpacity,\n            inactiveScale,\n            index,\n            style,\n            tappable,\n            delayPressInDot\n        } = this.props;\n\n        const animatedStyle = {\n            opacity: animOpacity.interpolate({\n                inputRange: [0, 1],\n                outputRange: [inactiveOpacity, 1]\n            }),\n            transform: [\n                {\n                    scale: animTransform.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [inactiveScale, 1]\n                    })\n                }\n            ]\n        };\n        const animatedColor =\n      this._shouldAnimateColor && inactiveColor && color ?\n          {\n              backgroundColor: animColor.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [inactiveColor, color]\n              })\n          } :\n          {};\n\n        const dotContainerStyle = [\n            styles.sliderPaginationDotContainer,\n            containerStyle || {}\n        ];\n\n        const dotStyle = [\n            styles.sliderPaginationDot,\n            style || {},\n            (!active && inactiveStyle) || {},\n            animatedStyle,\n            animatedColor\n        ];\n\n        const onPress =\n      tappable && (!!index || index === 0) ?\n          () => {\n              try {\n                  const currentRef =\n                carouselRef && 'current' in carouselRef ?\n                    carouselRef.current :\n                    carouselRef;\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              currentRef!._snapToItem(currentRef!._getPositionIndex(index));\n              } catch (error) {\n                  console.warn(\n                      'react-native-snap-carousel | Pagination: ' +\n                  '`carouselRef` has to be a Carousel ref.\\n' +\n                  error\n                  );\n              }\n          } :\n          undefined;\n\n        return (\n            <TouchableOpacity\n              accessible={false}\n              style={dotContainerStyle}\n              activeOpacity={tappable ? activeOpacity : 1}\n              onPress={onPress}\n              delayPressIn={delayPressInDot}\n            >\n                <Animated.View style={dotStyle} />\n            </TouchableOpacity>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}