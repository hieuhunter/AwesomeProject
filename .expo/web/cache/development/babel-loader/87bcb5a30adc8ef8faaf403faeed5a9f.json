{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = SearchScreen;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _MenuImage = _interopRequireDefault(require(\"../../components/MenuImage/MenuImage\"));\n\nvar _MockDataAPI = require(\"../../data/MockDataAPI\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _jsxFileName = \"E:\\\\hieu\\\\CVIEC\\\\AwesomeProject\\\\src\\\\screens\\\\Search\\\\SearchScreen.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction SearchScreen(props) {\n  var _this = this;\n\n  var navigation = props.navigation;\n\n  var _useState = (0, _react.useState)(\"\"),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  (0, _react.useLayoutEffect)(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return _react.default.createElement(_MenuImage.default, {\n          onPress: function onPress() {\n            navigation.openDrawer();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 9\n          }\n        });\n      },\n      headerTitle: function headerTitle() {\n        return _react.default.createElement(_reactNative.View, {\n          style: _styles.default.searchContainer,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 9\n          }\n        }, _react.default.createElement(_reactNative.Image, {\n          style: _styles.default.searchIcon,\n          source: require(\"../../../assets/icons/search.png\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }\n        }), _react.default.createElement(_reactNativeGestureHandler.TextInput, {\n          style: _styles.default.searchInput,\n          onChangeText: handleSearch,\n          value: value,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }\n        }), _react.default.createElement(_reactNative.Pressable, {\n          onPress: function onPress() {\n            return handleSearch(\"\");\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }\n        }, _react.default.createElement(_reactNative.Image, {\n          style: _styles.default.searchIcon,\n          source: require(\"../../../assets/icons/close.png\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }\n        })));\n      },\n      headerRight: function headerRight() {\n        return _react.default.createElement(_reactNative.View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 26\n          }\n        });\n      }\n    });\n  }, [value]);\n  (0, _react.useEffect)(function () {}, [value]);\n\n  var handleSearch = function handleSearch(text) {\n    setValue(text);\n    var recipeArray1 = (0, _MockDataAPI.getRecipesByRecipeName)(text);\n    var recipeArray2 = (0, _MockDataAPI.getRecipesByCategoryName)(text);\n    var recipeArray3 = (0, _MockDataAPI.getRecipesByIngredientName)(text);\n    var aux = recipeArray1.concat(recipeArray2);\n    var recipeArray = (0, _toConsumableArray2.default)(new Set(aux));\n\n    if (text == \"\") {\n      setData([]);\n    } else {\n      setData(recipeArray);\n    }\n  };\n\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n\n  var renderRecipes = function renderRecipes(_ref) {\n    var item = _ref.item;\n    return _react.default.createElement(_reactNative.TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: _styles.default.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_reactNative.Image, {\n      style: _styles.default.photo,\n      source: {\n        uri: item.photo_url\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), _react.default.createElement(_reactNative.Text, {\n      style: _styles.default.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, item.title), _react.default.createElement(_reactNative.Text, {\n      style: _styles.default.category,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, (0, _MockDataAPI.getCategoryName)(item.categoryId))));\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.FlatList, {\n    vertical: true,\n    showsVerticalScrollIndicator: false,\n    numColumns: 2,\n    data: data,\n    renderItem: renderRecipes,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.recipeId;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["SearchScreen","props","navigation","useState","value","setValue","data","setData","useLayoutEffect","setOptions","headerLeft","openDrawer","headerTitle","styles","searchContainer","searchIcon","require","searchInput","handleSearch","headerRight","useEffect","text","recipeArray1","getRecipesByRecipeName","recipeArray2","getRecipesByCategoryName","recipeArray3","getRecipesByIngredientName","aux","concat","recipeArray","Set","onPressRecipe","item","navigate","renderRecipes","container","photo","uri","photo_url","title","category","getCategoryName","categoryId","recipeId"],"sources":["E:/hieu/CVIEC/AwesomeProject/src/screens/Search/SearchScreen.js"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { FlatList, Text, View, Image, TouchableHighlight, Pressable } from \"react-native\";\nimport styles from \"./styles\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getCategoryName, getRecipesByRecipeName, getRecipesByCategoryName, getRecipesByIngredientName } from \"../../data/MockDataAPI\";\nimport { TextInput } from \"react-native-gesture-handler\";\n\nexport default function SearchScreen(props) {\n  const { navigation } = props;\n\n  const [value, setValue] = useState(\"\");\n  const [data, setData] = useState([]);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerLeft: () => (\n        <MenuImage\n          onPress={() => {\n            navigation.openDrawer();\n          }}\n        />\n      ),\n      headerTitle: () => (\n        <View style={styles.searchContainer}>\n          <Image style={styles.searchIcon} source={require(\"../../../assets/icons/search.png\")} />\n          <TextInput\n            style={styles.searchInput}\n            onChangeText={handleSearch}\n            value={value}\n          />\n          <Pressable onPress={() => handleSearch(\"\")}>\n          <Image style={styles.searchIcon} source={require(\"../../../assets/icons/close.png\")} />\n          </Pressable>\n        </View>\n      ),\n      headerRight: () => <View />,\n    });\n  }, [value]);\n\n  useEffect(() => {}, [value]);\n\n  const handleSearch = (text) => {\n    setValue(text);\n    var recipeArray1 = getRecipesByRecipeName(text);\n    var recipeArray2 = getRecipesByCategoryName(text);\n    var recipeArray3 = getRecipesByIngredientName(text);\n    var aux = recipeArray1.concat(recipeArray2);\n    var recipeArray = [...new Set(aux)];\n\n    if (text == \"\") {\n      setData([]);\n    } else {\n      setData(recipeArray);\n    }\n  };\n\n  const onPressRecipe = (item) => {\n    navigation.navigate(\"Recipe\", { item });\n  };\n\n  const renderRecipes = ({ item }) => (\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressRecipe(item)}>\n      <View style={styles.container}>\n        <Image style={styles.photo} source={{ uri: item.photo_url }} />\n        <Text style={styles.title}>{item.title}</Text>\n        <Text style={styles.category}>{getCategoryName(item.categoryId)}</Text>\n      </View>\n    </TouchableHighlight>\n  );\n\n  return (\n    <View>\n      <FlatList vertical showsVerticalScrollIndicator={false} numColumns={2} data={data} renderItem={renderRecipes} keyExtractor={(item) => `${item.recipeId}`} />\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}