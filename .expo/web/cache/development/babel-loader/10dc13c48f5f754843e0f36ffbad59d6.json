{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar IS_ANDROID = Platform.OS === 'android';\nexport function getInputRangeFromIndexes(range, index, carouselProps) {\n  var sizeRef = carouselProps.vertical ? carouselProps.itemHeight : carouselProps.itemWidth;\n  var inputRange = [];\n\n  for (var i = 0; i < range.length; i++) {\n    inputRange.push((index - range[i]) * sizeRef);\n  }\n\n  return inputRange;\n}\nexport function defaultScrollInterpolator(index, carouselProps) {\n  var range = [1, 0, -1];\n  var inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n  var outputRange = [0, 1, 0];\n  return {\n    inputRange: inputRange,\n    outputRange: outputRange\n  };\n}\nexport function defaultAnimatedStyles(_index, animatedValue, carouselProps) {\n  var animatedOpacity = {};\n  var animatedScale = {};\n\n  if (carouselProps.inactiveSlideOpacity < 1) {\n    animatedOpacity = {\n      opacity: animatedValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [carouselProps.inactiveSlideOpacity, 1]\n      })\n    };\n  }\n\n  if (carouselProps.inactiveSlideScale < 1) {\n    animatedScale = {\n      transform: [{\n        scale: animatedValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [carouselProps.inactiveSlideScale, 1]\n        })\n      }]\n    };\n  }\n\n  return _objectSpread(_objectSpread({}, animatedOpacity), animatedScale);\n}\nexport function shiftAnimatedStyles(_index, animatedValue, carouselProps) {\n  var animatedOpacity = {};\n  var animatedScale = {};\n  var animatedTranslate = {};\n\n  if (carouselProps.inactiveSlideOpacity < 1) {\n    animatedOpacity = {\n      opacity: animatedValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [carouselProps.inactiveSlideOpacity, 1]\n      })\n    };\n  }\n\n  if (carouselProps.inactiveSlideScale < 1) {\n    animatedScale = {\n      scale: animatedValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [carouselProps.inactiveSlideScale, 1]\n      })\n    };\n  }\n\n  if (carouselProps.inactiveSlideShift !== 0) {\n    var translateProp = carouselProps.vertical ? 'translateX' : 'translateY';\n    animatedTranslate = _defineProperty({}, translateProp, animatedValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [carouselProps.inactiveSlideShift, 0]\n    }));\n  }\n\n  return _objectSpread(_objectSpread({}, animatedOpacity), {}, {\n    transform: [_objectSpread({}, animatedScale), _objectSpread({}, animatedTranslate)]\n  });\n}\nexport function stackScrollInterpolator(index, carouselProps) {\n  var range = IS_ANDROID ? [1, 0, -1, -2, -3] : [3, 2, 1, 0, -1];\n  var inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n  var outputRange = range;\n  return {\n    inputRange: inputRange,\n    outputRange: outputRange\n  };\n}\nexport function stackAnimatedStyles(index, animatedValue, carouselProps, cardOffset) {\n  var sizeRef = carouselProps.vertical ? carouselProps.itemHeight : carouselProps.itemWidth;\n  var translateProp = carouselProps.vertical ? 'translateY' : 'translateX';\n  var card1Scale = 0.9;\n  var card2Scale = 0.8;\n  var newCardOffset = cardOffset !== null && cardOffset !== void 0 ? cardOffset : 18;\n\n  var getTranslateFromScale = function getTranslateFromScale(cardIndex, scale) {\n    var centerFactor = 1 / scale * cardIndex;\n    var centeredPosition = -Math.round(sizeRef * centerFactor);\n    var edgeAlignment = Math.round((sizeRef - sizeRef * scale) / 2);\n    var offset = Math.round(newCardOffset * Math.abs(cardIndex) / scale);\n    return IS_ANDROID ? centeredPosition - edgeAlignment - offset : centeredPosition + edgeAlignment + offset;\n  };\n\n  var opacityOutputRange = carouselProps.inactiveSlideOpacity === 1 ? [1, 1, 1, 0] : [1, 0.75, 0.5, 0];\n  return IS_ANDROID ? {\n    opacity: animatedValue.interpolate({\n      inputRange: [-3, -2, -1, 0],\n      outputRange: opacityOutputRange.reverse(),\n      extrapolate: 'clamp'\n    }),\n    transform: [{\n      scale: animatedValue.interpolate({\n        inputRange: [-2, -1, 0, 1],\n        outputRange: [card2Scale, card1Scale, 1, card1Scale],\n        extrapolate: 'clamp'\n      })\n    }, _defineProperty({}, translateProp, animatedValue.interpolate({\n      inputRange: [-3, -2, -1, 0, 1],\n      outputRange: [getTranslateFromScale(-3, card2Scale), getTranslateFromScale(-2, card2Scale), getTranslateFromScale(-1, card1Scale), 0, sizeRef * 0.5],\n      extrapolate: 'clamp'\n    }))]\n  } : {\n    zIndex: carouselProps.data.length - index,\n    opacity: animatedValue.interpolate({\n      inputRange: [0, 1, 2, 3],\n      outputRange: opacityOutputRange,\n      extrapolate: 'clamp'\n    }),\n    transform: [{\n      scale: animatedValue.interpolate({\n        inputRange: [-1, 0, 1, 2],\n        outputRange: [card1Scale, 1, card1Scale, card2Scale],\n        extrapolate: 'clamp'\n      })\n    }, _defineProperty({}, translateProp, animatedValue.interpolate({\n      inputRange: [-1, 0, 1, 2, 3],\n      outputRange: [-sizeRef * 0.5, 0, getTranslateFromScale(1, card1Scale), getTranslateFromScale(2, card2Scale), getTranslateFromScale(3, card2Scale)],\n      extrapolate: 'clamp'\n    }))]\n  };\n}\nexport function tinderScrollInterpolator(index, carouselProps) {\n  var range = IS_ANDROID ? [1, 0, -1, -2, -3] : [3, 2, 1, 0, -1];\n  var inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n  var outputRange = range;\n  return {\n    inputRange: inputRange,\n    outputRange: outputRange\n  };\n}\nexport function tinderAnimatedStyles(index, animatedValue, carouselProps, cardOffset) {\n  var sizeRef = carouselProps.vertical ? carouselProps.itemHeight : carouselProps.itemWidth;\n  var mainTranslateProp = carouselProps.vertical ? 'translateY' : 'translateX';\n  var secondaryTranslateProp = carouselProps.vertical ? 'translateX' : 'translateY';\n  var card1Scale = 0.96;\n  var card2Scale = 0.92;\n  var card3Scale = 0.88;\n  var peekingCardsOpacity = IS_ANDROID ? 0.92 : 1;\n  var newCardOffset = cardOffset !== null && cardOffset !== void 0 ? cardOffset : 9;\n\n  var getMainTranslateFromScale = function getMainTranslateFromScale(cardIndex, scale) {\n    var centerFactor = 1 / scale * cardIndex;\n    return -Math.round(sizeRef * centerFactor);\n  };\n\n  var getSecondaryTranslateFromScale = function getSecondaryTranslateFromScale(cardIndex, scale) {\n    return Math.round(newCardOffset * Math.abs(cardIndex) / scale);\n  };\n\n  return IS_ANDROID ? {\n    opacity: animatedValue.interpolate({\n      inputRange: [-3, -2, -1, 0, 1],\n      outputRange: [0, peekingCardsOpacity, peekingCardsOpacity, 1, 0],\n      extrapolate: 'clamp'\n    }),\n    transform: [{\n      scale: animatedValue.interpolate({\n        inputRange: [-3, -2, -1, 0],\n        outputRange: [card3Scale, card2Scale, card1Scale, 1],\n        extrapolate: 'clamp'\n      })\n    }, {\n      rotate: animatedValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '22deg'],\n        extrapolate: 'clamp'\n      })\n    }, _defineProperty({}, mainTranslateProp, animatedValue.interpolate({\n      inputRange: [-3, -2, -1, 0, 1],\n      outputRange: [getMainTranslateFromScale(-3, card3Scale), getMainTranslateFromScale(-2, card2Scale), getMainTranslateFromScale(-1, card1Scale), 0, sizeRef * 1.1],\n      extrapolate: 'clamp'\n    })), _defineProperty({}, secondaryTranslateProp, animatedValue.interpolate({\n      inputRange: [-3, -2, -1, 0],\n      outputRange: [getSecondaryTranslateFromScale(-3, card3Scale), getSecondaryTranslateFromScale(-2, card2Scale), getSecondaryTranslateFromScale(-1, card1Scale), 0],\n      extrapolate: 'clamp'\n    }))]\n  } : {\n    zIndex: carouselProps.data.length - index,\n    opacity: animatedValue.interpolate({\n      inputRange: [-1, 0, 1, 2, 3],\n      outputRange: [0, 1, peekingCardsOpacity, peekingCardsOpacity, 0],\n      extrapolate: 'clamp'\n    }),\n    transform: [{\n      scale: animatedValue.interpolate({\n        inputRange: [0, 1, 2, 3],\n        outputRange: [1, card1Scale, card2Scale, card3Scale],\n        extrapolate: 'clamp'\n      })\n    }, {\n      rotate: animatedValue.interpolate({\n        inputRange: [-1, 0],\n        outputRange: ['-22deg', '0deg'],\n        extrapolate: 'clamp'\n      })\n    }, _defineProperty({}, mainTranslateProp, animatedValue.interpolate({\n      inputRange: [-1, 0, 1, 2, 3],\n      outputRange: [-sizeRef * 1.1, 0, getMainTranslateFromScale(1, card1Scale), getMainTranslateFromScale(2, card2Scale), getMainTranslateFromScale(3, card3Scale)],\n      extrapolate: 'clamp'\n    })), _defineProperty({}, secondaryTranslateProp, animatedValue.interpolate({\n      inputRange: [0, 1, 2, 3],\n      outputRange: [0, getSecondaryTranslateFromScale(1, card1Scale), getSecondaryTranslateFromScale(2, card2Scale), getSecondaryTranslateFromScale(3, card3Scale)],\n      extrapolate: 'clamp'\n    }))]\n  };\n}","map":{"version":3,"mappings":"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","names":["IS_ANDROID","Platform","OS","getInputRangeFromIndexes","range","index","carouselProps","sizeRef","vertical","itemHeight","itemWidth","inputRange","i","length","push","defaultScrollInterpolator","outputRange","defaultAnimatedStyles","_index","animatedValue","animatedOpacity","animatedScale","inactiveSlideOpacity","opacity","interpolate","inactiveSlideScale","transform","scale","shiftAnimatedStyles","animatedTranslate","inactiveSlideShift","translateProp","stackScrollInterpolator","stackAnimatedStyles","cardOffset","card1Scale","card2Scale","newCardOffset","getTranslateFromScale","cardIndex","centerFactor","centeredPosition","Math","round","edgeAlignment","offset","abs","opacityOutputRange","reverse","extrapolate","zIndex","data","tinderScrollInterpolator","tinderAnimatedStyles","mainTranslateProp","secondaryTranslateProp","card3Scale","peekingCardsOpacity","getMainTranslateFromScale","getSecondaryTranslateFromScale","rotate"],"sources":["animations.ts"],"sourcesContent":["import { Platform, Animated } from 'react-native';\nimport type { CarouselProps } from 'src/carousel/types';\n\nconst IS_ANDROID = Platform.OS === 'android';\n\n// Get scroll interpolator's input range from an array of slide indexes\n// Indexes are relative to the current active slide (index 0)\n// For example, using [3, 2, 1, 0, -1] will return:\n// [\n//     (index - 3) * sizeRef, // active + 3\n//     (index - 2) * sizeRef, // active + 2\n//     (index - 1) * sizeRef, // active + 1\n//     index * sizeRef, // active\n//     (index + 1) * sizeRef // active - 1\n// ]\nexport function getInputRangeFromIndexes<TData> (\n    range: number[],\n    index: number,\n    carouselProps: CarouselProps<TData>\n) {\n    const sizeRef = carouselProps.vertical ?\n        carouselProps.itemHeight :\n        carouselProps.itemWidth;\n    const inputRange = [];\n\n    for (let i = 0; i < range.length; i++) {\n        inputRange.push((index - range[i]) * sizeRef);\n    }\n\n    return inputRange;\n}\n\n// Default behavior\n// Scale and/or opacity effect\n// Based on props 'inactiveSlideOpacity' and 'inactiveSlideScale'\nexport function defaultScrollInterpolator<TData> (\n    index: number,\n    carouselProps: CarouselProps<TData>\n) {\n    const range = [1, 0, -1];\n    const inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n    const outputRange = [0, 1, 0];\n\n    return { inputRange, outputRange };\n}\nexport function defaultAnimatedStyles<TData> (\n    _index: number,\n    animatedValue: Animated.AnimatedInterpolation,\n    carouselProps: CarouselProps<TData>\n) {\n    let animatedOpacity = {};\n    let animatedScale = {};\n\n    if (carouselProps.inactiveSlideOpacity < 1) {\n        animatedOpacity = {\n            opacity: animatedValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [carouselProps.inactiveSlideOpacity, 1]\n            })\n        };\n    }\n\n    if (carouselProps.inactiveSlideScale < 1) {\n        animatedScale = {\n            transform: [\n                {\n                    scale: animatedValue.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [carouselProps.inactiveSlideScale, 1]\n                    })\n                }\n            ]\n        };\n    }\n\n    return {\n        ...animatedOpacity,\n        ...animatedScale\n    };\n}\n\n// Shift animation\n// Same as the default one, but the active slide is also shifted up or down\n// Based on prop 'inactiveSlideShift'\nexport function shiftAnimatedStyles<TData> (\n    _index: number,\n    animatedValue: Animated.AnimatedInterpolation,\n    carouselProps: CarouselProps<TData>\n) {\n    let animatedOpacity = {};\n    let animatedScale = {};\n    let animatedTranslate = {};\n\n    if (carouselProps.inactiveSlideOpacity < 1) {\n        animatedOpacity = {\n            opacity: animatedValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [carouselProps.inactiveSlideOpacity, 1]\n            })\n        };\n    }\n\n    if (carouselProps.inactiveSlideScale < 1) {\n        animatedScale = {\n            scale: animatedValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [carouselProps.inactiveSlideScale, 1]\n            })\n        };\n    }\n\n    if (carouselProps.inactiveSlideShift !== 0) {\n        const translateProp = carouselProps.vertical ? 'translateX' : 'translateY';\n        animatedTranslate = {\n            [translateProp]: animatedValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [carouselProps.inactiveSlideShift, 0]\n            })\n        };\n    }\n\n    return {\n        ...animatedOpacity,\n        transform: [{ ...animatedScale }, { ...animatedTranslate }]\n    };\n}\n\n// Stack animation\n// Imitate a deck/stack of cards (see #195)\n// WARNING: The effect had to be visually inverted on Android because this OS doesn't honor the `zIndex`property\n// This means that the item with the higher zIndex (and therefore the tap receiver) remains the one AFTER the currently active item\n// The `elevation` property compensates for that only visually, which is not good enough\nexport function stackScrollInterpolator<TData> (\n    index: number,\n    carouselProps: CarouselProps<TData>\n) {\n    const range = IS_ANDROID ? [1, 0, -1, -2, -3] : [3, 2, 1, 0, -1];\n    const inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n    const outputRange = range;\n\n    return { inputRange, outputRange };\n}\nexport function stackAnimatedStyles<TData> (\n    index: number,\n    animatedValue: Animated.AnimatedInterpolation,\n    carouselProps: CarouselProps<TData>,\n    cardOffset?: number\n) {\n    const sizeRef = carouselProps.vertical ?\n        carouselProps.itemHeight :\n        carouselProps.itemWidth;\n    const translateProp = carouselProps.vertical ? 'translateY' : 'translateX';\n\n    const card1Scale = 0.9;\n    const card2Scale = 0.8;\n\n    const newCardOffset = cardOffset ?? 18;\n\n    const getTranslateFromScale = (cardIndex: number, scale: number) => {\n        const centerFactor = (1 / scale) * cardIndex;\n        const centeredPosition = -Math.round(sizeRef * centerFactor);\n        const edgeAlignment = Math.round((sizeRef - sizeRef * scale) / 2);\n        const offset = Math.round((newCardOffset * Math.abs(cardIndex)) / scale);\n\n        return IS_ANDROID ?\n            centeredPosition - edgeAlignment - offset :\n            centeredPosition + edgeAlignment + offset;\n    };\n\n    const opacityOutputRange =\n    carouselProps.inactiveSlideOpacity === 1 ? [1, 1, 1, 0] : [1, 0.75, 0.5, 0];\n\n    return IS_ANDROID ?\n        {\n        // elevation: carouselProps.data.length - index, // fix zIndex bug visually, but not from a logic point of view\n            opacity: animatedValue.interpolate({\n                inputRange: [-3, -2, -1, 0],\n                outputRange: opacityOutputRange.reverse(),\n                extrapolate: 'clamp'\n            }),\n            transform: [\n                {\n                    scale: animatedValue.interpolate({\n                        inputRange: [-2, -1, 0, 1],\n                        outputRange: [card2Scale, card1Scale, 1, card1Scale],\n                        extrapolate: 'clamp'\n                    })\n                },\n                {\n                    [translateProp]: animatedValue.interpolate({\n                        inputRange: [-3, -2, -1, 0, 1],\n                        outputRange: [\n                            getTranslateFromScale(-3, card2Scale),\n                            getTranslateFromScale(-2, card2Scale),\n                            getTranslateFromScale(-1, card1Scale),\n                            0,\n                            sizeRef * 0.5\n                        ],\n                        extrapolate: 'clamp'\n                    })\n                }\n            ]\n        } :\n        {\n            zIndex: carouselProps.data.length - index,\n            opacity: animatedValue.interpolate({\n                inputRange: [0, 1, 2, 3],\n                outputRange: opacityOutputRange,\n                extrapolate: 'clamp'\n            }),\n            transform: [\n                {\n                    scale: animatedValue.interpolate({\n                        inputRange: [-1, 0, 1, 2],\n                        outputRange: [card1Scale, 1, card1Scale, card2Scale],\n                        extrapolate: 'clamp'\n                    })\n                },\n                {\n                    [translateProp]: animatedValue.interpolate({\n                        inputRange: [-1, 0, 1, 2, 3],\n                        outputRange: [\n                            -sizeRef * 0.5,\n                            0,\n                            getTranslateFromScale(1, card1Scale),\n                            getTranslateFromScale(2, card2Scale),\n                            getTranslateFromScale(3, card2Scale)\n                        ],\n                        extrapolate: 'clamp'\n                    })\n                }\n            ]\n        };\n}\n\n// Tinder animation\n// Imitate the popular Tinder layout\n// WARNING: The effect had to be visually inverted on Android because this OS doesn't honor the `zIndex`property\n// This means that the item with the higher zIndex (and therefore the tap receiver) remains the one AFTER the currently active item\n// The `elevation` property compensates for that only visually, which is not good enough\nexport function tinderScrollInterpolator<TData> (\n    index: number,\n    carouselProps: CarouselProps<TData>\n) {\n    const range = IS_ANDROID ? [1, 0, -1, -2, -3] : [3, 2, 1, 0, -1];\n    const inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n    const outputRange = range;\n\n    return { inputRange, outputRange };\n}\nexport function tinderAnimatedStyles<TData> (\n    index: number,\n    animatedValue: Animated.AnimatedInterpolation,\n    carouselProps: CarouselProps<TData>,\n    cardOffset?: number\n) {\n    const sizeRef = carouselProps.vertical ?\n        carouselProps.itemHeight :\n        carouselProps.itemWidth;\n    const mainTranslateProp = carouselProps.vertical ?\n        'translateY' :\n        'translateX';\n    const secondaryTranslateProp = carouselProps.vertical ?\n        'translateX' :\n        'translateY';\n\n    const card1Scale = 0.96;\n    const card2Scale = 0.92;\n    const card3Scale = 0.88;\n\n    const peekingCardsOpacity = IS_ANDROID ? 0.92 : 1;\n\n    const newCardOffset = cardOffset ?? 9;\n\n    const getMainTranslateFromScale = (cardIndex: number, scale: number) => {\n        const centerFactor = (1 / scale) * cardIndex;\n        return -Math.round(sizeRef * centerFactor);\n    };\n\n    const getSecondaryTranslateFromScale = (cardIndex: number, scale: number) => {\n        return Math.round((newCardOffset * Math.abs(cardIndex)) / scale);\n    };\n\n    return IS_ANDROID ?\n        {\n        // elevation: carouselProps.data.length - index, // fix zIndex bug visually, but not from a logic point of view\n            opacity: animatedValue.interpolate({\n                inputRange: [-3, -2, -1, 0, 1],\n                outputRange: [0, peekingCardsOpacity, peekingCardsOpacity, 1, 0],\n                extrapolate: 'clamp'\n            }),\n            transform: [\n                {\n                    scale: animatedValue.interpolate({\n                        inputRange: [-3, -2, -1, 0],\n                        outputRange: [card3Scale, card2Scale, card1Scale, 1],\n                        extrapolate: 'clamp'\n                    })\n                },\n                {\n                    rotate: animatedValue.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: ['0deg', '22deg'],\n                        extrapolate: 'clamp'\n                    })\n                },\n                {\n                    [mainTranslateProp]: animatedValue.interpolate({\n                        inputRange: [-3, -2, -1, 0, 1],\n                        outputRange: [\n                            getMainTranslateFromScale(-3, card3Scale),\n                            getMainTranslateFromScale(-2, card2Scale),\n                            getMainTranslateFromScale(-1, card1Scale),\n                            0,\n                            sizeRef * 1.1\n                        ],\n                        extrapolate: 'clamp'\n                    })\n                },\n                {\n                    [secondaryTranslateProp]: animatedValue.interpolate({\n                        inputRange: [-3, -2, -1, 0],\n                        outputRange: [\n                            getSecondaryTranslateFromScale(-3, card3Scale),\n                            getSecondaryTranslateFromScale(-2, card2Scale),\n                            getSecondaryTranslateFromScale(-1, card1Scale),\n                            0\n                        ],\n                        extrapolate: 'clamp'\n                    })\n                }\n            ]\n        } :\n        {\n            zIndex: carouselProps.data.length - index,\n            opacity: animatedValue.interpolate({\n                inputRange: [-1, 0, 1, 2, 3],\n                outputRange: [0, 1, peekingCardsOpacity, peekingCardsOpacity, 0],\n                extrapolate: 'clamp'\n            }),\n            transform: [\n                {\n                    scale: animatedValue.interpolate({\n                        inputRange: [0, 1, 2, 3],\n                        outputRange: [1, card1Scale, card2Scale, card3Scale],\n                        extrapolate: 'clamp'\n                    })\n                },\n                {\n                    rotate: animatedValue.interpolate({\n                        inputRange: [-1, 0],\n                        outputRange: ['-22deg', '0deg'],\n                        extrapolate: 'clamp'\n                    })\n                },\n                {\n                    [mainTranslateProp]: animatedValue.interpolate({\n                        inputRange: [-1, 0, 1, 2, 3],\n                        outputRange: [\n                            -sizeRef * 1.1,\n                            0,\n                            getMainTranslateFromScale(1, card1Scale),\n                            getMainTranslateFromScale(2, card2Scale),\n                            getMainTranslateFromScale(3, card3Scale)\n                        ],\n                        extrapolate: 'clamp'\n                    })\n                },\n                {\n                    [secondaryTranslateProp]: animatedValue.interpolate({\n                        inputRange: [0, 1, 2, 3],\n                        outputRange: [\n                            0,\n                            getSecondaryTranslateFromScale(1, card1Scale),\n                            getSecondaryTranslateFromScale(2, card2Scale),\n                            getSecondaryTranslateFromScale(3, card3Scale)\n                        ],\n                        extrapolate: 'clamp'\n                    })\n                }\n            ]\n        };\n}\n"]},"metadata":{},"sourceType":"module"}